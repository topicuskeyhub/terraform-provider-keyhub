// Code generated by "terraform-provider-keyhub-generator"; DO NOT EDIT.
// Copyright (c) Topicus Security B.V.
// SPDX-License-Identifier: APSL-2.0

//lint:ignore U1000 Ignore unused functions in generated code
package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func objectAttrsTypeRSAuditInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["last_modified_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGeneratedSecret(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["generated_secret"] = types.StringType
	objectAttrs["old_secret"] = types.StringType
	objectAttrs["regenerate"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSNonLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRestLink(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["href"] = types.StringType
	objectAttrs["id"] = types.Int64Type
	objectAttrs["rel"] = types.StringType
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["full"] = types.StringType
	objectAttrs["instances"] = types.ListType{ElemType: types.StringType}
	objectAttrs["operations"] = types.SetType{ElemType: types.StringType}
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSCertificateCertificatePrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["alias"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["certificate_data"] = types.StringType
	objectAttrs["expiration"] = types.StringType
	objectAttrs["fingerprint_sha1"] = types.StringType
	objectAttrs["fingerprint_sha256"] = types.StringType
	objectAttrs["global"] = types.BoolType
	objectAttrs["subject_dn"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientApplicationVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["delete_tile"] = types.BoolType
		objectAttrs["parent_uuid"] = types.StringType
		objectAttrs["password_metadata"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultPasswordMetadata(false)}
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordSecrets(false)}
		objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShareSummary(false)}
		objectAttrs["shares"] = objectAttrsTypeRSVaultVaultRecordPrimerLinkableWrapper(false)["items"]
		objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(false)}
		objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultHolder(false)}
	}
	objectAttrs["client_application_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.SetType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplication(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["delete_tile"] = types.BoolType
		objectAttrs["groupclients"] = objectAttrsTypeRSGroupGroupClientLinkableWrapper(false)["items"]
		objectAttrs["groups"] = objectAttrsTypeRSGroupGroupLinkableWrapper(false)["items"]
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGeneratedSecret(false)}
		objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadSsoApplicationLaunchpadTile(false)}
		objectAttrs["vault_record_count"] = types.Int64Type
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	objectAttrs["ldap_client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientLdapClient(false)}
	objectAttrs["oauth2_client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2Client(false)}
	objectAttrs["saml2_client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientSaml2Client(false)}
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplicationLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSClientClientApplication(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplicationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplication_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["delete_tile"] = types.BoolType
	objectAttrs["groupclients"] = objectAttrsTypeRSGroupGroupClientLinkableWrapper(recurse)["items"]
	objectAttrs["groups"] = objectAttrsTypeRSGroupGroupLinkableWrapper(recurse)["items"]
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGeneratedSecret(recurse)}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadSsoApplicationLaunchpadTile(recurse)}
	objectAttrs["vault_record_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSClientLdapClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["bind_dn"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret_uuid"] = types.StringType
	objectAttrs["used_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["attributes"] = types.MapType{ElemType: types.StringType}
	objectAttrs["callback_uri"] = types.StringType
	objectAttrs["confidential"] = types.BoolType
	objectAttrs["debug_mode"] = types.BoolType
	objectAttrs["id_token_claims"] = types.StringType
	objectAttrs["initiate_login_uri"] = types.StringType
	objectAttrs["resource_uris"] = types.StringType
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret_uuid"] = types.StringType
	objectAttrs["show_landing_page"] = types.BoolType
	objectAttrs["use_client_credentials"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["for_group_uuid"] = types.StringType
	objectAttrs["for_system_uuid"] = types.StringType
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermissionWithClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["for_group_uuid"] = types.StringType
	objectAttrs["for_system_uuid"] = types.StringType
	objectAttrs["value"] = types.StringType
	objectAttrs["client_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermissionWithClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermission_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSClientSaml2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.MapType{ElemType: types.StringType}
	objectAttrs["metadata"] = types.StringType
	objectAttrs["metadata_url"] = types.StringType
	objectAttrs["subject_format"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(false)}
		objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectoryStatusReport(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["base_organizational_unit_uuid"] = types.StringType
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group_uuid"] = types.StringType
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	objectAttrs["internal_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryInternalDirectory(false)}
	objectAttrs["ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryLDAPDirectory(false)}
	objectAttrs["maintenance_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryMaintenanceDirectory(false)}
	objectAttrs["oidc_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryOIDCDirectory(false)}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectoryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectory(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectoryPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectoryStatusReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = types.Int64Type
	objectAttrs["reason"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectorySummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["type"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectoryStatusReport(recurse)}
	objectAttrs["username_customizable"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectorySummaryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectorySummary(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectory_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(recurse)}
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectoryStatusReport(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryInternalDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["owner_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["base_dn"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["dialect"] = types.StringType
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate_uuid"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["password_recovery"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["search_bind_dn"] = types.StringType
	objectAttrs["search_bind_password"] = types.StringType
	objectAttrs["search_filter"] = types.StringType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryMaintenanceDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSDirectoryOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["acr_values"] = types.StringType
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["enforces2fa"] = types.BoolType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["issuer"] = types.StringType
	objectAttrs["logout_url"] = types.StringType
	objectAttrs["send_login_hint"] = types.BoolType
	objectAttrs["vendor_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupAuthorizedGroupsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}}
	objectAttrs["group_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["accounts"] = objectAttrsTypeRSGroupGroupAccountLinkableWrapper(false)["items"]
		objectAttrs["administered_clients"] = objectAttrsTypeRSClientClientApplicationLinkableWrapper(false)["items"]
		objectAttrs["administered_systems"] = objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(false)["items"]
		objectAttrs["admins"] = objectAttrsTypeRSGroupGroupAccountLinkableWrapper(false)["items"]
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["authorized_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupAuthorizedGroupsWrapper(false)}
		objectAttrs["client_permissions"] = objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(false)["items"]
		objectAttrs["clients"] = objectAttrsTypeRSGroupGroupClientLinkableWrapper(false)["items"]
		objectAttrs["content_administered_systems"] = objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(false)["items"]
		objectAttrs["groupauditinginfo"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditingInfo(false)}
		objectAttrs["groupinfo"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupInfo(false)}
		objectAttrs["helpdesk"] = objectAttrsTypeRSDirectoryAccountDirectorySummaryLinkableWrapper(false)["items"]
		objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(false)}
		objectAttrs["myaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(false)}
		objectAttrs["mydelegatedaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(false)}
		objectAttrs["nested_groups"] = objectAttrsTypeRSGroupGroupPrimerLinkableWrapper(false)["items"]
		objectAttrs["owned_clients"] = objectAttrsTypeRSClientClientApplicationLinkableWrapper(false)["items"]
		objectAttrs["owned_directories"] = objectAttrsTypeRSDirectoryAccountDirectoryLinkableWrapper(false)["items"]
		objectAttrs["owned_groups_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningOwnedGroupOnSystemsWrapper(false)}
		objectAttrs["owned_organizational_units"] = objectAttrsTypeRSOrganizationOrganizationalUnitLinkableWrapper(false)["items"]
		objectAttrs["owned_systems"] = objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(false)["items"]
		objectAttrs["recent_audits"] = objectAttrsTypeRSGroupGroupAuditLinkableWrapper(false)["items"]
		objectAttrs["requeststatus"] = types.StringType
		objectAttrs["service_accounts"] = objectAttrsTypeRSServiceaccountServiceAccountLinkableWrapper(false)["items"]
		objectAttrs["systems"] = objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(false)["items"]
		objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVault(false)}
		objectAttrs["webhooks"] = objectAttrsTypeRSWebhookWebhookLinkableWrapper(false)["items"]
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["application_administration"] = types.BoolType
	objectAttrs["audit_config"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditConfig(false)}
	objectAttrs["audit_requested"] = types.BoolType
	objectAttrs["auditor"] = types.BoolType
	objectAttrs["authorizing_group_auditing_uuid"] = types.StringType
	objectAttrs["authorizing_group_delegation_uuid"] = types.StringType
	objectAttrs["authorizing_group_membership_uuid"] = types.StringType
	objectAttrs["authorizing_group_provisioning_uuid"] = types.StringType
	objectAttrs["authorizing_group_types"] = types.SetType{ElemType: types.StringType}
	objectAttrs["classification_uuid"] = types.StringType
	objectAttrs["description"] = types.StringType
	objectAttrs["extended_access"] = types.StringType
	objectAttrs["hide_audit_trail"] = types.BoolType
	objectAttrs["nested_under_uuid"] = types.StringType
	objectAttrs["private_group"] = types.BoolType
	objectAttrs["record_trail"] = types.BoolType
	objectAttrs["rotating_password_required"] = types.BoolType
	objectAttrs["single_managed"] = types.BoolType
	objectAttrs["vault_recovery"] = types.StringType
	objectAttrs["vault_requires_activation"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAudit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["accounts"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditAccount(false)}}
	objectAttrs["comment"] = types.StringType
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["group_name"] = types.StringType
	objectAttrs["name_on_audit"] = types.StringType
	objectAttrs["reviewed_at"] = types.StringType
	objectAttrs["reviewed_by"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["submitted_at"] = types.StringType
	objectAttrs["submitted_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["account_valid"] = types.BoolType
	objectAttrs["action"] = types.StringType
	objectAttrs["comment"] = types.StringType
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["display_name"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["rights"] = types.StringType
	objectAttrs["username"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditConfig(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["months"] = types.SetType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAudit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAudit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditingInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit_due_date"] = types.StringType
	objectAttrs["last_audit_date"] = types.StringType
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_managers"] = types.Int64Type
	objectAttrs["nr_expired_vault_records"] = types.Int64Type
	objectAttrs["nr_managers"] = types.Int64Type
	objectAttrs["nr_vault_records_with_end_date"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClassificationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["client_uuid"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClient_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_accounts_with_vault"] = types.Int64Type
	objectAttrs["nr_audits"] = types.Int64Type
	objectAttrs["nr_clients"] = types.Int64Type
	objectAttrs["nr_provisioned_systems"] = types.Int64Type
	objectAttrs["nr_vault_records"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = objectAttrsTypeRSGroupGroupAccountLinkableWrapper(recurse)["items"]
	objectAttrs["administered_clients"] = objectAttrsTypeRSClientClientApplicationLinkableWrapper(recurse)["items"]
	objectAttrs["administered_systems"] = objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse)["items"]
	objectAttrs["admins"] = objectAttrsTypeRSGroupGroupAccountLinkableWrapper(recurse)["items"]
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["authorized_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupAuthorizedGroupsWrapper(recurse)}
	objectAttrs["client_permissions"] = objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)["items"]
	objectAttrs["clients"] = objectAttrsTypeRSGroupGroupClientLinkableWrapper(recurse)["items"]
	objectAttrs["content_administered_systems"] = objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse)["items"]
	objectAttrs["groupauditinginfo"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditingInfo(recurse)}
	objectAttrs["groupinfo"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupInfo(recurse)}
	objectAttrs["helpdesk"] = objectAttrsTypeRSDirectoryAccountDirectorySummaryLinkableWrapper(recurse)["items"]
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(recurse)}
	objectAttrs["myaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(recurse)}
	objectAttrs["mydelegatedaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(recurse)}
	objectAttrs["nested_groups"] = objectAttrsTypeRSGroupGroupPrimerLinkableWrapper(recurse)["items"]
	objectAttrs["owned_clients"] = objectAttrsTypeRSClientClientApplicationLinkableWrapper(recurse)["items"]
	objectAttrs["owned_directories"] = objectAttrsTypeRSDirectoryAccountDirectoryLinkableWrapper(recurse)["items"]
	objectAttrs["owned_groups_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningOwnedGroupOnSystemsWrapper(recurse)}
	objectAttrs["owned_organizational_units"] = objectAttrsTypeRSOrganizationOrganizationalUnitLinkableWrapper(recurse)["items"]
	objectAttrs["owned_systems"] = objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse)["items"]
	objectAttrs["recent_audits"] = objectAttrsTypeRSGroupGroupAuditLinkableWrapper(recurse)["items"]
	objectAttrs["requeststatus"] = types.StringType
	objectAttrs["service_accounts"] = objectAttrsTypeRSServiceaccountServiceAccountLinkableWrapper(recurse)["items"]
	objectAttrs["systems"] = objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(recurse)["items"]
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVault(recurse)}
	objectAttrs["webhooks"] = objectAttrsTypeRSWebhookWebhookLinkableWrapper(recurse)["items"]
	return objectAttrs
}

func objectAttrsTypeRSGroupProvisioningGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(false)}
	return objectAttrs
}

func objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupProvisioningGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupProvisioningGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["delete_tile"] = types.BoolType
		objectAttrs["parent_uuid"] = types.StringType
		objectAttrs["password_metadata"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultPasswordMetadata(false)}
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordSecrets(false)}
		objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShareSummary(false)}
		objectAttrs["shares"] = objectAttrsTypeRSVaultVaultRecordPrimerLinkableWrapper(false)["items"]
		objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(false)}
		objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultHolder(false)}
	}
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.SetType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadSsoApplicationLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSMarkItemMarker(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["level"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["parameters"] = types.MapType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSMarkItemMarkers(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["markers"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarker(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSNestedProvisioningGroupOnSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["provgroups"] = objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(false)["items"]
		objectAttrs["service_accounts"] = objectAttrsTypeRSServiceaccountServiceAccountPrimerLinkableWrapper(false)["items"]
	}
	objectAttrs["provisioned_system_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["create_as_parent_of"] = objectAttrsTypeRSOrganizationOrganizationalUnitPrimerLinkableWrapper(false)["items"]
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["depth"] = types.Int64Type
	objectAttrs["description"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["parent_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnitPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["create_as_parent_of"] = objectAttrsTypeRSOrganizationOrganizationalUnitPrimerLinkableWrapper(recurse)["items"]
	return objectAttrs
}

func objectAttrsTypeRSProvisioningAbstractProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.MapType{ElemType: types.StringType}
	objectAttrs["base_dn"] = types.StringType
	objectAttrs["bind_dn"] = types.StringType
	objectAttrs["bind_password"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate_uuid"] = types.StringType
	objectAttrs["group_dn"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["object_classes"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["service_account_dn"] = types.StringType
	objectAttrs["ssh_public_key_supported"] = types.BoolType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate_uuid"] = types.StringType
	objectAttrs["user_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningCircuitBreakerStatistics(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["number_of_failed_calls"] = types.Int64Type
	objectAttrs["number_of_not_permitted_calls"] = types.Int64Type
	objectAttrs["number_of_successful_calls"] = types.Int64Type
	objectAttrs["state"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["provgroups"] = objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(false)["items"]
		objectAttrs["service_accounts"] = objectAttrsTypeRSServiceaccountServiceAccountPrimerLinkableWrapper(false)["items"]
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystemTypes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["provgroups"] = objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(recurse)["items"]
	objectAttrs["service_accounts"] = objectAttrsTypeRSServiceaccountServiceAccountPrimerLinkableWrapper(recurse)["items"]
	return objectAttrs
}

func objectAttrsTypeRSProvisioningOwnedGroupOnSystemsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}}
	objectAttrs["unlinked_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionNumberSequence(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["systems"] = objectAttrsTypeRSProvisioningProvisionedSystemPrimerLinkableWrapper(false)["items"]
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["name"] = types.StringType
	objectAttrs["next_uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionNumberSequence_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["systems"] = objectAttrsTypeRSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse)["items"]
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAD(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["sam_account_name_scheme"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAzureOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAzureSyncLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAzureTenant(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["idp_domain"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedInternalLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["gid"] = types.Int64Type
	objectAttrs["hashing_scheme"] = types.StringType
	objectAttrs["numbering"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionNumberSequence(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["group_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedNamespace(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["base_system_uuid"] = types.StringType
	objectAttrs["group_dn"] = types.StringType
	objectAttrs["service_account_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSCIM(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["authentication_scheme"] = types.StringType
	objectAttrs["basic_auth_password"] = types.StringType
	objectAttrs["basic_auth_username"] = types.StringType
	objectAttrs["bearer_token"] = types.StringType
	objectAttrs["custom_header_name"] = types.StringType
	objectAttrs["custom_header_value"] = types.StringType
	objectAttrs["url"] = types.StringType
	objectAttrs["vendor_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAccount(false)}
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["issued_permissions"] = objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(false)["items"]
		objectAttrs["login_name"] = types.StringType
		objectAttrs["management_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisioningManagementPermissions(false)}
		objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(false)}
		objectAttrs["statistics"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningCircuitBreakerStatistics(false)}
		objectAttrs["supported_group_types"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystemTypes(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator_uuid"] = types.StringType
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_new_namespaces"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["abstract_provisioned_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningAbstractProvisionedLDAP(false)}
	objectAttrs["provisioned_a_d"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAD(false)}
	objectAttrs["provisioned_azure_oidc_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAzureOIDCDirectory(false)}
	objectAttrs["provisioned_azure_sync_ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAzureSyncLDAPDirectory(false)}
	objectAttrs["provisioned_azure_tenant"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAzureTenant(false)}
	objectAttrs["provisioned_internal_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedInternalLDAP(false)}
	objectAttrs["provisioned_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedLDAP(false)}
	objectAttrs["provisioned_ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedLDAPDirectory(false)}
	objectAttrs["provisioned_namespace"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedNamespace(false)}
	objectAttrs["provisioned_scim"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSCIM(false)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAccount(recurse)}
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["issued_permissions"] = objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)["items"]
	objectAttrs["login_name"] = types.StringType
	objectAttrs["management_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisioningManagementPermissions(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(recurse)}
	objectAttrs["statistics"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningCircuitBreakerStatistics(recurse)}
	objectAttrs["supported_group_types"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystemTypes(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisioningManagementPermissions(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["create_new_groups_allowed"] = types.BoolType
	objectAttrs["create_service_accounts_allowed"] = types.BoolType
	objectAttrs["reuse_existing_groups_allowed"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["groups"] = objectAttrsTypeRSServiceaccountServiceAccountGroupLinkableWrapper(false)["items"]
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGeneratedSecret(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["description"] = types.StringType
	objectAttrs["password_uuid"] = types.StringType
	objectAttrs["password_rotation"] = types.StringType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["groups"] = objectAttrsTypeRSServiceaccountServiceAccountGroupLinkableWrapper(recurse)["items"]
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGeneratedSecret(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSVaultPasswordMetadata(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["dictionary"] = types.BoolType
	objectAttrs["duplicate"] = types.BoolType
	objectAttrs["hash"] = types.StringType
	objectAttrs["length"] = types.Int64Type
	objectAttrs["lower_count"] = types.Int64Type
	objectAttrs["number_count"] = types.Int64Type
	objectAttrs["special_count"] = types.Int64Type
	objectAttrs["strength"] = types.Int64Type
	objectAttrs["upper_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSVaultVault(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["access_available"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["records"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultHolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
		objectAttrs["delete_tile"] = types.BoolType
		objectAttrs["parent_uuid"] = types.StringType
		objectAttrs["password_metadata"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultPasswordMetadata(false)}
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordSecrets(false)}
		objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShareSummary(false)}
		objectAttrs["shares"] = objectAttrsTypeRSVaultVaultRecordPrimerLinkableWrapper(false)["items"]
		objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(false)}
		objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultHolder(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.SetType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordSecrets(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["comment"] = types.StringType
	objectAttrs["file"] = types.StringType
	objectAttrs["password"] = types.StringType
	objectAttrs["totp"] = types.StringType
	objectAttrs["write_totp"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordShare(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordShareSummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["children"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShare(recurse)}}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShare(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecord_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["delete_tile"] = types.BoolType
	objectAttrs["parent_uuid"] = types.StringType
	objectAttrs["password_metadata"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultPasswordMetadata(recurse)}
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordSecrets(recurse)}
	objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShareSummary(recurse)}
	objectAttrs["shares"] = objectAttrsTypeRSVaultVaultRecordPrimerLinkableWrapper(recurse)["items"]
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(recurse)}
	objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultHolder(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhook(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["active"] = types.BoolType
	objectAttrs["all_types"] = types.BoolType
	objectAttrs["authentication_scheme"] = types.StringType
	objectAttrs["basic_auth_password"] = types.StringType
	objectAttrs["basic_auth_username"] = types.StringType
	objectAttrs["bearer_token"] = types.StringType
	objectAttrs["client_uuid"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["custom_header_name"] = types.StringType
	objectAttrs["custom_header_value"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate_uuid"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["verbose_payloads"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhookLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhook(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhook_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}
