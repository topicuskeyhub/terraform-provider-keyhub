// Code generated by "terraform-provider-keyhub-generator"; DO NOT EDIT.

//lint:ignore U1000 Ignore unused functions in generated code
package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func objectAttrsTypeRSAuditInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["last_modified_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSErrorReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["application_error"] = types.StringType
	objectAttrs["application_error_parameters"] = types.ObjectType{AttrTypes: objectAttrsTypeRSErrorReport_applicationErrorParameters(recurse)}
	objectAttrs["code"] = types.Int64Type
	objectAttrs["error_details"] = types.ListType{ElemType: types.StringType}
	objectAttrs["exception"] = types.StringType
	objectAttrs["message"] = types.StringType
	objectAttrs["reason"] = types.StringType
	objectAttrs["stacktrace"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSErrorReport_applicationErrorParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSGeneratedSecret(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["generated_secret"] = types.StringType
	objectAttrs["old_secret"] = types.StringType
	objectAttrs["regenerate"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSNonLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRestLink(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["href"] = types.StringType
	objectAttrs["id"] = types.Int64Type
	objectAttrs["rel"] = types.StringType
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSSegmentCount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["count"] = types.Int64Type
	objectAttrs["name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAccountVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord_additionalObjects(false)}
	}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuditAuditRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditAuditRecord_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["audit_audit_record_type"] = types.StringType
	objectAttrs["date_time"] = types.StringType
	objectAttrs["on_account"] = types.StringType
	objectAttrs["on_certificate"] = types.StringType
	objectAttrs["on_client"] = types.StringType
	objectAttrs["on_directory"] = types.StringType
	objectAttrs["on_group"] = types.StringType
	objectAttrs["on_group2"] = types.StringType
	objectAttrs["on_group_classification"] = types.StringType
	objectAttrs["on_organizational_unit"] = types.StringType
	objectAttrs["on_service_account"] = types.StringType
	objectAttrs["on_system"] = types.StringType
	objectAttrs["on_vault_record"] = types.StringType
	objectAttrs["on_webhook"] = types.StringType
	objectAttrs["parameter1"] = types.StringType
	objectAttrs["parameter2"] = types.StringType
	objectAttrs["parameter3"] = types.StringType
	objectAttrs["performed_by"] = types.StringType
	objectAttrs["security_level"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuditAuditRecordLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuditAuditRecord(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSAuditAuditRecord_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSAuthAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuthAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(false)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["can_request_groups"] = types.BoolType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["directory_name"] = types.StringType
	objectAttrs["directory_password_change_required"] = types.BoolType
	objectAttrs["directory_rotating_password"] = types.StringType
	objectAttrs["directory_type"] = types.StringType
	objectAttrs["email"] = types.StringType
	objectAttrs["id_in_directory"] = types.StringType
	objectAttrs["key_hub_password_change_required"] = types.BoolType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["license_role"] = types.StringType
	objectAttrs["locale"] = types.StringType
	objectAttrs["reregistration_required"] = types.BoolType
	objectAttrs["token_password_enabled"] = types.BoolType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["valid_in_directory"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountBulkUpdate(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["action"] = types.StringType
	objectAttrs["exclusive_selection"] = types.BoolType
	objectAttrs["selected_accounts"] = types.ListType{ElemType: types.Int64Type}
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountChangeLocale(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["locale"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountRecoveryStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["pending2fa_recovery_request"] = types.BoolType
	objectAttrs["pending_password_recovery_request"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountSettings(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["default_organizational_unit_uuid"] = types.StringType
	objectAttrs["directory_name"] = types.StringType
	objectAttrs["directory_type"] = types.StringType
	objectAttrs["in_groups"] = types.BoolType
	objectAttrs["in_multiple_organizational_units"] = types.BoolType
	objectAttrs["key_hub_admin"] = types.BoolType
	objectAttrs["multiple_organizational_units_exist"] = types.BoolType
	objectAttrs["password_mode"] = types.StringType
	objectAttrs["ssh_public_key"] = types.StringType
	objectAttrs["two_factor_authentication"] = types.StringType
	objectAttrs["use_token_password"] = types.BoolType
	objectAttrs["vault_status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_enabled"] = types.BoolType
	objectAttrs["can_request_groups"] = types.BoolType
	objectAttrs["decline_recovery_requests"] = types.BoolType
	objectAttrs["license_role"] = types.StringType
	objectAttrs["reregistration_required"] = types.BoolType
	objectAttrs["two_factor_authentication_enabled"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSAuthAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["active_login"] = types.BoolType
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["groups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupAccountGroupLinkableWrapper(recurse)}
	objectAttrs["pending_recovery_requests"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuthAccountRecoveryStatus(recurse)}
	objectAttrs["settings"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuthAccountSettings(recurse)}
	objectAttrs["stored_attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuthStoredAccountAttributes(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountsAuditStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuthAccountsAuditStats_directoryStats(recurse)}
	objectAttrs["two_fa_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuthAccountsAuditStats_twoFAStats(recurse)}
	objectAttrs["validity_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuthAccountsAuditStats_validityStats(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountsAuditStats_directoryStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountsAuditStats_twoFAStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSAuthAccountsAuditStats_validityStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSAuthInternalAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["uuid"] = types.StringType
	objectAttrs["activation_code"] = types.StringType
	objectAttrs["activation_deadline"] = types.StringType
	objectAttrs["company"] = types.StringType
	objectAttrs["first_name"] = types.StringType
	objectAttrs["last_name"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["telephone"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthInternalAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthInternalAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSAuthInternalAccountStatusObject(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthMoveInternalAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["internal_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryInternalDirectory(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSAuthPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["full"] = types.StringType
	objectAttrs["instances"] = types.ListType{ElemType: types.StringType}
	objectAttrs["operations"] = types.ListType{ElemType: types.StringType}
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthStoredAccountAttribute(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSAuthStoredAccountAttributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthStoredAccountAttribute(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSCertificateCertificate(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSCertificateCertificate_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["alias"] = types.StringType
	objectAttrs["certificate_certificate_primer_type"] = types.StringType
	objectAttrs["certificate_data"] = types.ListType{ElemType: types.StringType}
	objectAttrs["expiration"] = types.StringType
	objectAttrs["fingerprint_sha1"] = types.StringType
	objectAttrs["fingerprint_sha256"] = types.StringType
	objectAttrs["global"] = types.BoolType
	objectAttrs["subject_dn"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["key_data"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSCertificateCertificateLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSCertificateCertificate(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSCertificateCertificatePrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["alias"] = types.StringType
	objectAttrs["certificate_certificate_primer_type"] = types.StringType
	objectAttrs["certificate_data"] = types.ListType{ElemType: types.StringType}
	objectAttrs["expiration"] = types.StringType
	objectAttrs["fingerprint_sha1"] = types.StringType
	objectAttrs["fingerprint_sha256"] = types.StringType
	objectAttrs["global"] = types.BoolType
	objectAttrs["subject_dn"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSCertificateCertificate_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSClientApplicationVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord_additionalObjects(false)}
	}
	objectAttrs["client_application_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplication(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientClientApplication_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["client_client_application_primer_type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	objectAttrs["o_auth2_client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2Client(false)}
	objectAttrs["ldap_client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientLdapClient(false)}
	objectAttrs["saml2_client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientSaml2Client(false)}
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplicationLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSClientClientApplication(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplicationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["client_client_application_primer_type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientClientApplication_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["delete_tile"] = types.BoolType
	objectAttrs["groupclients"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClientLinkableWrapper(recurse)}
	objectAttrs["groups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupLinkableWrapper(recurse)}
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGeneratedSecret(recurse)}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadSsoApplicationLaunchpadTile(recurse)}
	objectAttrs["vault_record_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSClientLdapClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["bind_dn"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret_uuid"] = types.StringType
	objectAttrs["used_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2Client_attributes(recurse)}
	objectAttrs["callback_uri"] = types.StringType
	objectAttrs["confidential"] = types.BoolType
	objectAttrs["debug_mode"] = types.BoolType
	objectAttrs["id_token_claims"] = types.StringType
	objectAttrs["initiate_login_uri"] = types.StringType
	objectAttrs["resource_uris"] = types.StringType
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret_uuid"] = types.StringType
	objectAttrs["show_landing_page"] = types.BoolType
	objectAttrs["use_client_credentials"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermission_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["for_group_uuid"] = types.StringType
	objectAttrs["for_system_uuid"] = types.StringType
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermissionLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermissionWithClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermission_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["for_group_uuid"] = types.StringType
	objectAttrs["for_system_uuid"] = types.StringType
	objectAttrs["value"] = types.StringType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2Client(false)}
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermissionWithClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2ClientPermission_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSClientOAuth2Client_attributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSClientSaml2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientSaml2Client_attributes(recurse)}
	objectAttrs["metadata"] = types.StringType
	objectAttrs["metadata_url"] = types.StringType
	objectAttrs["subject_format"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSClientSaml2Client_attributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSDeletedVaultHolderVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord_additionalObjects(false)}
	}
	objectAttrs["deleted_vault_holder_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectory_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["base_organizational_unit_uuid"] = types.StringType
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group_uuid"] = types.StringType
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	objectAttrs["maintenance_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryMaintenanceDirectory(false)}
	objectAttrs["o_id_c_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryOIDCDirectory(false)}
	objectAttrs["l_d_a_p_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryLDAPDirectory(false)}
	objectAttrs["internal_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryInternalDirectory(false)}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectoryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectory(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectoryPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectoryStatusReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = types.Int64Type
	objectAttrs["reason"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectorySummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["directory_account_directory_summary_type"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectoryStatusReport(recurse)}
	objectAttrs["username_customizable"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectorySummaryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectorySummary(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryAccountDirectory_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(recurse)}
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectoryStatusReport(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSDirectoryInternalDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["owner_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["base_dn"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["dialect"] = types.StringType
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate_uuid"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["password_recovery"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["search_bind_dn"] = types.StringType
	objectAttrs["search_bind_password"] = types.StringType
	objectAttrs["search_filter"] = types.StringType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSDirectoryMaintenanceDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSDirectoryOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["acr_values"] = types.StringType
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["enforces2fa"] = types.BoolType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["issuer"] = types.StringType
	objectAttrs["logout_url"] = types.StringType
	objectAttrs["send_login_hint"] = types.BoolType
	objectAttrs["vendor_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupAccountGroup_additionalObjects(false)}
	}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupFolder(false)}
	objectAttrs["last_used"] = types.StringType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupAccountGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupAccountGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupAccountGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupAuthorizedGroupsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}}
	objectAttrs["group_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["application_administration"] = types.BoolType
	objectAttrs["audit_config"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditConfig(false)}
	objectAttrs["audit_requested"] = types.BoolType
	objectAttrs["auditor"] = types.BoolType
	objectAttrs["authorizing_group_auditing_uuid"] = types.StringType
	objectAttrs["authorizing_group_delegation_uuid"] = types.StringType
	objectAttrs["authorizing_group_membership_uuid"] = types.StringType
	objectAttrs["authorizing_group_provisioning_uuid"] = types.StringType
	objectAttrs["authorizing_group_types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["classification_uuid"] = types.StringType
	objectAttrs["description"] = types.StringType
	objectAttrs["extended_access"] = types.StringType
	objectAttrs["hide_audit_trail"] = types.BoolType
	objectAttrs["nested_under_uuid"] = types.StringType
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["private_group"] = types.BoolType
	objectAttrs["record_trail"] = types.BoolType
	objectAttrs["rotating_password_required"] = types.BoolType
	objectAttrs["single_managed"] = types.BoolType
	objectAttrs["vault_recovery"] = types.StringType
	objectAttrs["vault_requires_activation"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount_additionalObjects(false)}
	}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccountNesting(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["connected"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccountStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupFolder(recurse)}
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAdminMail(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["body"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAudit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAudit_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["accounts"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditAccount(false)}}
	objectAttrs["comment"] = types.StringType
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["group_name"] = types.StringType
	objectAttrs["name_on_audit"] = types.StringType
	objectAttrs["reviewed_at"] = types.StringType
	objectAttrs["reviewed_by"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["submitted_at"] = types.StringType
	objectAttrs["submitted_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["account_valid"] = types.BoolType
	objectAttrs["action"] = types.StringType
	objectAttrs["comment"] = types.StringType
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["display_name"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["rights"] = types.StringType
	objectAttrs["username"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditConfig(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["months"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAudit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAudit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupAuditingInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit_due_date"] = types.StringType
	objectAttrs["last_audit_date"] = types.StringType
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_managers"] = types.Int64Type
	objectAttrs["nr_expired_vault_records"] = types.Int64Type
	objectAttrs["nr_managers"] = types.Int64Type
	objectAttrs["nr_vault_records_with_end_date"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClassification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClassification_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["authorizing_group_auditing_required"] = types.BoolType
	objectAttrs["authorizing_group_delegation_required"] = types.BoolType
	objectAttrs["authorizing_group_membership_required"] = types.BoolType
	objectAttrs["authorizing_group_provisioning_required"] = types.BoolType
	objectAttrs["default_classification"] = types.BoolType
	objectAttrs["description"] = types.StringType
	objectAttrs["maximum_audit_interval"] = types.Int64Type
	objectAttrs["minimum_nr_managers"] = types.Int64Type
	objectAttrs["record_trail_required"] = types.BoolType
	objectAttrs["required_months"] = types.ListType{ElemType: types.StringType}
	objectAttrs["rotating_password_required"] = types.BoolType
	objectAttrs["vault_requires_activation"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClassificationInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nr_groups"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClassificationLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClassification(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClassificationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClassificationUpdate(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["classificaton_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClassification_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["info"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClassificationInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClient_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["client_uuid"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupClient_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupFolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupFolder_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupFolderLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupFolder(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupFolder_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_accounts_with_vault"] = types.Int64Type
	objectAttrs["nr_audits"] = types.Int64Type
	objectAttrs["nr_clients"] = types.Int64Type
	objectAttrs["nr_provisioned_systems"] = types.Int64Type
	objectAttrs["nr_vault_records"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupSegmentedLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}}
	objectAttrs["segments"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSSegmentCount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccountLinkableWrapper(recurse)}
	objectAttrs["administered_clients"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientClientApplicationLinkableWrapper(recurse)}
	objectAttrs["administered_systems"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse)}
	objectAttrs["admins"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccountLinkableWrapper(recurse)}
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["authorized_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupAuthorizedGroupsWrapper(recurse)}
	objectAttrs["client_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)}
	objectAttrs["clients"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClientLinkableWrapper(recurse)}
	objectAttrs["content_administered_systems"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse)}
	objectAttrs["groupauditinginfo"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditingInfo(recurse)}
	objectAttrs["groupinfo"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupInfo(recurse)}
	objectAttrs["helpdesk"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectorySummaryLinkableWrapper(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(recurse)}
	objectAttrs["myaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(recurse)}
	objectAttrs["mydelegatedaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount(recurse)}
	objectAttrs["nested_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupPrimerLinkableWrapper(recurse)}
	objectAttrs["owned_clients"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientClientApplicationLinkableWrapper(recurse)}
	objectAttrs["owned_directories"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryAccountDirectoryLinkableWrapper(recurse)}
	objectAttrs["owned_groups_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningOwnedGroupOnSystemsWrapper(recurse)}
	objectAttrs["owned_organizational_units"] = types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnitLinkableWrapper(recurse)}
	objectAttrs["owned_systems"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse)}
	objectAttrs["recent_audits"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditLinkableWrapper(recurse)}
	objectAttrs["requeststatus"] = types.StringType
	objectAttrs["service_accounts"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountLinkableWrapper(recurse)}
	objectAttrs["systems"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVault(recurse)}
	objectAttrs["webhooks"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupGroupsAuditStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audited_groups"] = types.Int64Type
	objectAttrs["classifications"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupClassification(recurse)}}
	objectAttrs["overdue_audit_groups"] = types.Int64Type
	objectAttrs["overdue_vault_policies"] = types.Int64Type
	objectAttrs["unaudited_groups"] = types.Int64Type
	objectAttrs["valid_vault_policies"] = types.Int64Type
	objectAttrs["vaults_without_policies"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSGroupProvisioningGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupProvisioningGroup_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(false)}
	return objectAttrs
}

func objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupProvisioningGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSGroupProvisioningGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSGroupVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord_additionalObjects(false)}
	}
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadDisplayedLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["identicon_code"] = types.Int64Type
	objectAttrs["logo"] = types.ListType{ElemType: types.StringType}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadLaunchpadTilePrimer(recurse)}
	objectAttrs["title"] = types.StringType
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadDisplayedLaunchpadTiles(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadDisplayedLaunchpadTile(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadLaunchpadTile_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["application_uuid"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["identicon_code"] = types.Int64Type
	objectAttrs["launchpad_launchpad_tile_type"] = types.StringType
	objectAttrs["logo"] = types.ListType{ElemType: types.StringType}
	objectAttrs["vault_record_uuid"] = types.StringType
	objectAttrs["sso_application_launchpad_tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadSsoApplicationLaunchpadTile(false)}
	objectAttrs["vault_record_launchpad_tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(false)}
	objectAttrs["manual_launchpad_tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadManualLaunchpadTile(false)}
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadLaunchpadTileLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadLaunchpadTile(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadLaunchpadTilePrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadLaunchpadTile_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadManualLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["title"] = types.StringType
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadSsoApplicationLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSLicenseKeyHubLicenseInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["current_license_status"] = types.StringType
	objectAttrs["customer_company"] = types.StringType
	objectAttrs["customer_contact"] = types.StringType
	objectAttrs["customer_domains"] = types.ListType{ElemType: types.StringType}
	objectAttrs["details"] = types.ListType{ElemType: types.StringType}
	objectAttrs["expiration_time"] = types.StringType
	objectAttrs["features"] = types.ListType{ElemType: types.StringType}
	objectAttrs["issue_time"] = types.StringType
	objectAttrs["key_hub_domain"] = types.StringType
	objectAttrs["license_key"] = types.StringType
	objectAttrs["not_before_time"] = types.StringType
	objectAttrs["users_hard_limit"] = types.Int64Type
	objectAttrs["users_pro_limit"] = types.Int64Type
	objectAttrs["users_soft_limit"] = types.Int64Type
	objectAttrs["uuid"] = types.StringType
	objectAttrs["version"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSMarkItemMarker(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["level"] = types.StringType
	objectAttrs["mark_item_marker_type"] = types.StringType
	objectAttrs["parameters"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarker_parameters(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSMarkItemMarker_parameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSMarkItemMarkers(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["markers"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarker(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSNestedAuthInternalAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_directory_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["activation_code"] = types.StringType
	objectAttrs["activation_deadline"] = types.StringType
	objectAttrs["company"] = types.StringType
	objectAttrs["first_name"] = types.StringType
	objectAttrs["last_name"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["telephone"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNestedClientOAuth2ClientPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermission_additionalObjects(false)}
	}
	objectAttrs["client_application_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["for_group_uuid"] = types.StringType
	objectAttrs["for_system_uuid"] = types.StringType
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNestedGroupAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupAccountGroup_additionalObjects(false)}
	}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupFolder(false)}
	objectAttrs["last_used"] = types.StringType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSNestedGroupGroupAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAccount_additionalObjects(false)}
	}
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSNestedGroupGroupAudit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAudit_additionalObjects(false)}
	}
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["accounts"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupAuditAccount(false)}}
	objectAttrs["comment"] = types.StringType
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["group_name"] = types.StringType
	objectAttrs["name_on_audit"] = types.StringType
	objectAttrs["reviewed_at"] = types.StringType
	objectAttrs["reviewed_by"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["submitted_at"] = types.StringType
	objectAttrs["submitted_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNestedOrganizationAccountOrganizationalUnit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationAccountOrganizationalUnit_additionalObjects(false)}
	}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNestedOrganizationOrganizationalUnitAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnitAccount_additionalObjects(false)}
	}
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNestedProvisioningGroupOnSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem_additionalObjects(false)}
	}
	objectAttrs["provisioned_system_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNestedProvisioningProvisionedAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAccount_additionalObjects(false)}
	}
	objectAttrs["provisioned_system_uuid"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSNestedProvisioningProvisionedSystemSyncLog(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemSyncLog_additionalObjects(false)}
	}
	objectAttrs["provisioned_system_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["created_at"] = types.StringType
	objectAttrs["errors"] = types.Int64Type
	objectAttrs["log"] = types.StringType
	objectAttrs["modifications"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSNestedServiceaccountServiceAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountGroup_additionalObjects(false)}
	}
	objectAttrs["service_account_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNestedWebhookWebhookDelivery(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookDelivery_additionalObjects(false)}
	}
	objectAttrs["webhook_uuid"] = types.StringType
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["payload"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookPush(false)}
	objectAttrs["reponse_headers"] = types.StringType
	objectAttrs["request_headers"] = types.StringType
	objectAttrs["response"] = types.StringType
	objectAttrs["status"] = types.Int64Type
	objectAttrs["time"] = types.Int64Type
	objectAttrs["trigger_time"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNotificationCertificateExpiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeRSCertificateCertificate(recurse)}
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSDirectoryLDAPDirectory(recurse)}
	objectAttrs["expiration"] = types.StringType
	objectAttrs["ldap_client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientLdapClient(recurse)}
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystem(recurse)}
	objectAttrs["usage"] = types.StringType
	objectAttrs["webhook"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhook(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSNotificationGroupAuditRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["due_date"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}
	objectAttrs["notification_group_audit_required_notification_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNotificationGroupEditRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}
	objectAttrs["parameters"] = types.ObjectType{AttrTypes: objectAttrsTypeRSNotificationGroupEditRequiredNotification_parameters(recurse)}
	objectAttrs["reason"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNotificationGroupEditRequiredNotification_parameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSNotificationInvalidSignaturesDetectedNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSNotificationLicenseStatusNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["active_accounts"] = types.Int64Type
	objectAttrs["license_info"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLicenseKeyHubLicenseInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSNotificationModificationRequestNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["admins"] = types.ListType{ElemType: types.StringType}
	objectAttrs["groups"] = types.ListType{ElemType: types.StringType}
	objectAttrs["request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestModificationRequest(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSNotificationNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSNotificationNotifications(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSNotificationNotification(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSNotificationOldApiVersionUsageNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["api_version"] = types.Int64Type
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2Client(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSNotificationProvisionConfigRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["systems"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSNotificationRotatingPasswordRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["groups"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSNotificationUpdateAvailableNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["released_at"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSNotificationVaultRecordExpiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["record"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationAccountOrganizationalUnit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationAccountOrganizationalUnit_additionalObjects(false)}
	}
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSOrganizationAccountOrganizationalUnitLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationAccountOrganizationalUnit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationAccountOrganizationalUnit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnit_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["depth"] = types.Int64Type
	objectAttrs["description"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["parent_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnitAccount_additionalObjects(false)}
	}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnitAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnitPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSOrganizationOrganizationalUnit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["create_as_parent_of"] = types.ObjectType{AttrTypes: objectAttrsTypeRSOrganizationOrganizationalUnitPrimerLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningAbstractProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningAbstractProvisionedLDAP_attributes(recurse)}
	objectAttrs["base_dn"] = types.StringType
	objectAttrs["bind_dn"] = types.StringType
	objectAttrs["bind_password"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate_uuid"] = types.StringType
	objectAttrs["group_dn"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["object_classes"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["service_account_dn"] = types.StringType
	objectAttrs["ssh_public_key_supported"] = types.BoolType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate_uuid"] = types.StringType
	objectAttrs["user_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningAbstractProvisionedLDAP_attributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSProvisioningAccountProvisioningStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["description"] = types.StringType
	objectAttrs["result"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupProvisioningGroup(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningAccountProvisioningStatusReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["status"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningAccountProvisioningStatus(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningCircuitBreakerStatistics(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["number_of_failed_calls"] = types.Int64Type
	objectAttrs["number_of_not_permitted_calls"] = types.Int64Type
	objectAttrs["number_of_successful_calls"] = types.Int64Type
	objectAttrs["state"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystemTypes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupOnSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["provgroups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupProvisioningGroupLinkableWrapper(recurse)}
	objectAttrs["service_accounts"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountPrimerLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupProvisioningStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroupFolder(recurse)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGroupGroup(recurse)}
	objectAttrs["provisioning_duration"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupProvisioningStatus_provisioningDuration(recurse)}
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["provisioning_permission_end_time"] = types.StringType
	objectAttrs["status_report"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningAccountProvisioningStatusReport(recurse)}
	objectAttrs["visible_on_dashboard"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningGroupProvisioningStatus_provisioningDuration(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nanos"] = types.Int64Type
	objectAttrs["seconds"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningOwnedGroupOnSystemsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}}
	objectAttrs["unlinked_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionNumberSequence(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionNumberSequence_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["name"] = types.StringType
	objectAttrs["next_uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionNumberSequenceLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionNumberSequence(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionNumberSequence_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["systems"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAD(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["sam_account_name_scheme"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAccount_additionalObjects(false)}
	}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAzureOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAzureSyncLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedAzureTenant(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["idp_domain"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedInternalLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientLdapClient(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["gid"] = types.Int64Type
	objectAttrs["hashing_scheme"] = types.StringType
	objectAttrs["numbering"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionNumberSequence(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["group_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator_uuid"] = types.StringType
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner_uuid"] = types.StringType
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["provisioned_azure_oidc_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAzureOIDCDirectory(false)}
	objectAttrs["provisioned_internal_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedInternalLDAP(false)}
	objectAttrs["abstract_provisioned_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningAbstractProvisionedLDAP(false)}
	objectAttrs["provisioned_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedLDAP(false)}
	objectAttrs["provisioned_azure_sync_ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAzureSyncLDAPDirectory(false)}
	objectAttrs["provisioned_ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedLDAPDirectory(false)}
	objectAttrs["provisioned_a_d"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAD(false)}
	objectAttrs["provisioned_azure_tenant"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAzureTenant(false)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit_uuid"] = types.StringType
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemSyncLog(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemSyncLog_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["created_at"] = types.StringType
	objectAttrs["errors"] = types.Int64Type
	objectAttrs["log"] = types.StringType
	objectAttrs["modifications"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemSyncLogLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedSystemSyncLog(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystemSyncLog_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisionedSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisionedAccount(recurse)}
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["issued_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeRSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)}
	objectAttrs["login_name"] = types.StringType
	objectAttrs["management_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningProvisioningManagementPermissions(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeRSMarkItemMarkers(recurse)}
	objectAttrs["statistics"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningCircuitBreakerStatistics(recurse)}
	objectAttrs["supported_group_types"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystemTypes(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisioningManagementPermissions(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["create_new_groups_allowed"] = types.BoolType
	objectAttrs["create_service_accounts_allowed"] = types.BoolType
	objectAttrs["reuse_existing_groups_allowed"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningProvisioningStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["groups"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupProvisioningStatus(recurse)}}
	objectAttrs["ignore_errors"] = types.BoolType
	objectAttrs["restricted_by_license"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSProvisioningTokenPassword(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["password"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestAbstractApplicationModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["application_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestAbstractOrganizationalUnitModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["organizational_unit_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestAbstractProvisionedSystemModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["system_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestAcceptGrantAccessRequestParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["access_duration"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestAcceptGrantAccessRequestParameters_accessDuration(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSRequestAcceptGrantAccessRequestParameters_accessDuration(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nanos"] = types.Int64Type
	objectAttrs["seconds"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSRequestAcceptJoinGroupRequestParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["end_date"] = types.StringType
	objectAttrs["make_manager"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSRequestAcceptModificationRequestParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestAddGroupAdminRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["new_admin_uuid"] = types.StringType
	objectAttrs["private_key"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestCreateGroupOnSystemRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_on_system_type"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestCreateGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["group_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestCreateServiceAccountRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["username"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestDisable2FARequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["subject"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestEnableTechnicalAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestExtendAccessRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["extend_until"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestGrantAccessRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestGrantApplicationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestGrantClientPermissionRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["permission_type"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestGrantGroupOnSystemRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSRequestGrantGroupOnSystemRequestRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSRequestGrantServiceAccountGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}
	objectAttrs["service_account_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestJoinGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestJoinVaultRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["abstract_organizational_unit_modification_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestAbstractOrganizationalUnitModificationRequest(false)}
	objectAttrs["create_group_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestCreateGroupRequest(false)}
	objectAttrs["abstract_application_modification_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestAbstractApplicationModificationRequest(false)}
	objectAttrs["transfer_application_ownership_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferApplicationOwnershipRequest(false)}
	objectAttrs["grant_client_permission_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestGrantClientPermissionRequest(false)}
	objectAttrs["join_group_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestJoinGroupRequest(false)}
	objectAttrs["abstract_provisioned_system_modification_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestAbstractProvisionedSystemModificationRequest(false)}
	objectAttrs["transfer_provisioned_system_content_administration_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferProvisionedSystemContentAdministrationRequest(false)}
	objectAttrs["grant_group_on_system_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestGrantGroupOnSystemRequest(false)}
	objectAttrs["transfer_provisioned_system_ownership_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferProvisionedSystemOwnershipRequest(false)}
	objectAttrs["grant_service_account_group_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestGrantServiceAccountGroupRequest(false)}
	objectAttrs["disable2fa_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestDisable2FARequest(false)}
	objectAttrs["remove_provisioned_system_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestRemoveProvisionedSystemRequest(false)}
	objectAttrs["transfer_service_account_administration_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferServiceAccountAdministrationRequest(false)}
	objectAttrs["password_reset_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestPasswordResetRequest(false)}
	objectAttrs["transfer_auditor_group_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferAuditorGroupRequest(false)}
	objectAttrs["update_group_membership_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestUpdateGroupMembershipRequest(false)}
	objectAttrs["add_group_admin_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestAddGroupAdminRequest(false)}
	objectAttrs["remove_organizational_unit_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestRemoveOrganizationalUnitRequest(false)}
	objectAttrs["transfer_provisioned_system_administration_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferProvisionedSystemAdministrationRequest(false)}
	objectAttrs["verify_internal_account_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestVerifyInternalAccountRequest(false)}
	objectAttrs["transfer_application_administration_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferApplicationAdministrationRequest(false)}
	objectAttrs["extend_access_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestExtendAccessRequest(false)}
	objectAttrs["grant_group_on_system_request_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestGrantGroupOnSystemRequestRequest(false)}
	objectAttrs["join_vault_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestJoinVaultRequest(false)}
	objectAttrs["grant_access_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestGrantAccessRequest(false)}
	objectAttrs["revoke_admin_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestRevokeAdminRequest(false)}
	objectAttrs["setup_authorizing_group_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestSetupAuthorizingGroupRequest(false)}
	objectAttrs["transfer_organizational_unit_ownership_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferOrganizationalUnitOwnershipRequest(false)}
	objectAttrs["create_service_account_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestCreateServiceAccountRequest(false)}
	objectAttrs["create_group_on_system_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestCreateGroupOnSystemRequest(false)}
	objectAttrs["review_audit_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestReviewAuditRequest(false)}
	objectAttrs["enable_technical_administration_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestEnableTechnicalAdministrationRequest(false)}
	objectAttrs["setup_nested_group_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestSetupNestedGroupRequest(false)}
	objectAttrs["transfer_group_on_system_ownership_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestTransferGroupOnSystemOwnershipRequest(false)}
	objectAttrs["remove_group_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestRemoveGroupRequest(false)}
	objectAttrs["grant_application_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestGrantApplicationRequest(false)}
	return objectAttrs
}

func objectAttrsTypeRSRequestModificationRequestLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRequestModificationRequest(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSRequestModificationRequest_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accept_params"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestAcceptModificationRequestParameters(recurse)}
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["reset_status"] = types.ObjectType{AttrTypes: objectAttrsTypeRSRequestPasswordResetRequestStatus(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSRequestPasswordResetRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["new_vault_and_directory_password"] = types.StringType
	objectAttrs["new_vault_password"] = types.StringType
	objectAttrs["unsynced_password"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSRequestPasswordResetRequestStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["cooldown_end"] = types.StringType
	objectAttrs["managers"] = types.ListType{ElemType: types.StringType}
	objectAttrs["nr_accepted"] = types.Int64Type
	objectAttrs["reset_via_mail"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestRemoveGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["group_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestRemoveOrganizationalUnitRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["organizational_unit_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestRemoveProvisionedSystemRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["system_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestReviewAuditRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestRevokeAdminRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["admin_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestSetupAuthorizingGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["authorizing_group_type"] = types.StringType
	objectAttrs["connect"] = types.BoolType
	objectAttrs["requesting_group_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestSetupNestedGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_action"] = types.StringType
	objectAttrs["connect"] = types.BoolType
	objectAttrs["requesting_group_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferApplicationAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferApplicationOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferAuditorGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferGroupOnSystemOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSProvisioningGroupOnSystem(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferOrganizationalUnitOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferProvisionedSystemAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferProvisionedSystemContentAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferProvisionedSystemOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSRequestTransferServiceAccountAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["service_account_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestUpdateGroupMembershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_to_update_uuid"] = types.StringType
	objectAttrs["current_end_date"] = types.StringType
	objectAttrs["current_rights"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["update_group_membership_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSRequestVerifyInternalAccountRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["internal_account_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["description"] = types.StringType
	objectAttrs["password_uuid"] = types.StringType
	objectAttrs["password_rotation"] = types.StringType
	objectAttrs["technical_administrator_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountGroup_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_enabled"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["groups"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountGroupLinkableWrapper(recurse)}
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSGeneratedSecret(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountsAuditStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["disabled_count"] = types.Int64Type
	objectAttrs["password_scheme_enabled_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountsAuditStats_passwordSchemeEnabledStats(recurse)}
	objectAttrs["system_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeRSServiceaccountServiceAccountsAuditStats_systemStats(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountsAuditStats_passwordSchemeEnabledStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSServiceaccountServiceAccountsAuditStats_systemStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSSimpleStringValue(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSSimpleVersionInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["contract_versions"] = types.ListType{ElemType: types.Int64Type}
	objectAttrs["key_hub_version"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultDeletedVaultHolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultDeletedVaultHolder_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["record_count"] = types.Int64Type
	objectAttrs["vault_deleted_vault_holder_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultDeletedVaultHolderLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSVaultDeletedVaultHolder(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSVaultDeletedVaultHolder_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSVaultDeletedVaultRecovery(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["prefix"] = types.StringType
	objectAttrs["private_key"] = types.StringType
	objectAttrs["target_group_uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultMoveVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["action"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["share_duration"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultMoveVaultRecord_shareDuration(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSVaultMoveVaultRecord_shareDuration(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nanos"] = types.Int64Type
	objectAttrs["seconds"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSVaultPasswordMetadata(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["dictionary"] = types.BoolType
	objectAttrs["duplicate"] = types.BoolType
	objectAttrs["hash"] = types.StringType
	objectAttrs["length"] = types.Int64Type
	objectAttrs["lower_count"] = types.Int64Type
	objectAttrs["number_count"] = types.Int64Type
	objectAttrs["special_count"] = types.Int64Type
	objectAttrs["strength"] = types.Int64Type
	objectAttrs["upper_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeRSVaultVault(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["access_available"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["records"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultHolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecord(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordSecrets(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["comment"] = types.StringType
	objectAttrs["file"] = types.StringType
	objectAttrs["password"] = types.StringType
	objectAttrs["totp"] = types.StringType
	objectAttrs["write_totp"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordShare(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["vault_vault_record_share_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecordShareSummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["children"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShare(recurse)}}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShare(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecord_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	objectAttrs["delete_tile"] = types.BoolType
	objectAttrs["parent_uuid"] = types.StringType
	objectAttrs["password_metadata"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultPasswordMetadata(recurse)}
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordSecrets(recurse)}
	objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordShareSummary(recurse)}
	objectAttrs["shares"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultRecordPrimerLinkableWrapper(recurse)}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLaunchpadVaultRecordLaunchpadTile(recurse)}
	objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeRSVaultVaultHolder(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultRecovery(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["private_key"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultUnlock(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["password"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSVaultVaultUnlockResponse(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["expires_at"] = types.StringType
	objectAttrs["session_password"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhook(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhook_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["active"] = types.BoolType
	objectAttrs["all_types"] = types.BoolType
	objectAttrs["authentication_scheme"] = types.StringType
	objectAttrs["basic_auth_password"] = types.StringType
	objectAttrs["basic_auth_username"] = types.StringType
	objectAttrs["bearer_token"] = types.StringType
	objectAttrs["client_uuid"] = types.StringType
	objectAttrs["client_certificate_uuid"] = types.StringType
	objectAttrs["custom_header_name"] = types.StringType
	objectAttrs["custom_header_value"] = types.StringType
	objectAttrs["directory_uuid"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["system_uuid"] = types.StringType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate_uuid"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["verbose_payloads"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhookDelivery(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookDelivery_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSAuthPermission(recurse)}}
	objectAttrs["payload"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookPush(false)}
	objectAttrs["reponse_headers"] = types.StringType
	objectAttrs["request_headers"] = types.StringType
	objectAttrs["response"] = types.StringType
	objectAttrs["status"] = types.Int64Type
	objectAttrs["time"] = types.Int64Type
	objectAttrs["trigger_time"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhookDeliveryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookDelivery(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhookDelivery_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhookLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhook(recurse)}}
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhookNameUuid(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["object"] = types.ObjectType{AttrTypes: objectAttrsTypeRSLinkable(recurse)}
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhookPush(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["by_party"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["group2"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["group_classification"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["modification_request"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["parameter1"] = types.StringType
	objectAttrs["parameter2"] = types.StringType
	objectAttrs["parameter3"] = types.StringType
	objectAttrs["security_level"] = types.StringType
	objectAttrs["seq"] = types.Int64Type
	objectAttrs["service_account"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["timestamp"] = types.StringType
	objectAttrs["vault_record"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["webhook"] = types.ObjectType{AttrTypes: objectAttrsTypeRSWebhookWebhookNameUuid(recurse)}
	objectAttrs["webhook_webhook_push_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeRSWebhookWebhook_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeRSAuditInfo(recurse)}
	return objectAttrs
}
