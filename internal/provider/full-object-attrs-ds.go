// Code generated by "terraform-provider-keyhub-generator"; DO NOT EDIT.

//lint:ignore U1000 Ignore unused functions in generated code
package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func objectAttrsTypeDSAuditInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["last_modified_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSErrorReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["application_error"] = types.StringType
	objectAttrs["application_error_parameters"] = types.ObjectType{AttrTypes: objectAttrsTypeDSErrorReport_applicationErrorParameters(recurse)}
	objectAttrs["code"] = types.Int64Type
	objectAttrs["error_details"] = types.ListType{ElemType: types.StringType}
	objectAttrs["exception"] = types.StringType
	objectAttrs["message"] = types.StringType
	objectAttrs["reason"] = types.StringType
	objectAttrs["stacktrace"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSErrorReport_applicationErrorParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSGeneratedSecret(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["generated_secret"] = types.StringType
	objectAttrs["old_secret"] = types.StringType
	objectAttrs["regenerate"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSNonLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSRestLink(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["href"] = types.StringType
	objectAttrs["id"] = types.Int64Type
	objectAttrs["rel"] = types.StringType
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSSegmentCount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["count"] = types.Int64Type
	objectAttrs["name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuditAuditRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditAuditRecord_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["audit_audit_record_type"] = types.StringType
	objectAttrs["date_time"] = types.StringType
	objectAttrs["on_account"] = types.StringType
	objectAttrs["on_certificate"] = types.StringType
	objectAttrs["on_client"] = types.StringType
	objectAttrs["on_directory"] = types.StringType
	objectAttrs["on_group"] = types.StringType
	objectAttrs["on_group2"] = types.StringType
	objectAttrs["on_group_classification"] = types.StringType
	objectAttrs["on_organizational_unit"] = types.StringType
	objectAttrs["on_service_account"] = types.StringType
	objectAttrs["on_system"] = types.StringType
	objectAttrs["on_vault_record"] = types.StringType
	objectAttrs["on_webhook"] = types.StringType
	objectAttrs["parameter1"] = types.StringType
	objectAttrs["parameter2"] = types.StringType
	objectAttrs["parameter3"] = types.StringType
	objectAttrs["performed_by"] = types.StringType
	objectAttrs["security_level"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuditAuditRecordLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuditAuditRecord(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSAuditAuditRecord_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSAuthAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(false)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["can_request_groups"] = types.BoolType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["directory_name"] = types.StringType
	objectAttrs["directory_password_change_required"] = types.BoolType
	objectAttrs["directory_rotating_password"] = types.StringType
	objectAttrs["directory_type"] = types.StringType
	objectAttrs["email"] = types.StringType
	objectAttrs["id_in_directory"] = types.StringType
	objectAttrs["key_hub_password_change_required"] = types.BoolType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["license_role"] = types.StringType
	objectAttrs["locale"] = types.StringType
	objectAttrs["reregistration_required"] = types.BoolType
	objectAttrs["token_password_enabled"] = types.BoolType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["valid_in_directory"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountBulkUpdate(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["action"] = types.StringType
	objectAttrs["exclusive_selection"] = types.BoolType
	objectAttrs["selected_accounts"] = types.ListType{ElemType: types.Int64Type}
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountChangeLocale(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["locale"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountRecoveryStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["pending2_f_a_recovery_request"] = types.BoolType
	objectAttrs["pending_password_recovery_request"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountSettings(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["default_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["directory_name"] = types.StringType
	objectAttrs["directory_type"] = types.StringType
	objectAttrs["in_groups"] = types.BoolType
	objectAttrs["in_multiple_organizational_units"] = types.BoolType
	objectAttrs["key_hub_admin"] = types.BoolType
	objectAttrs["multiple_organizational_units_exist"] = types.BoolType
	objectAttrs["password_mode"] = types.StringType
	objectAttrs["ssh_public_key"] = types.StringType
	objectAttrs["two_factor_authentication"] = types.StringType
	objectAttrs["use_token_password"] = types.BoolType
	objectAttrs["vault_status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_enabled"] = types.BoolType
	objectAttrs["can_request_groups"] = types.BoolType
	objectAttrs["decline_recovery_requests"] = types.BoolType
	objectAttrs["license_role"] = types.StringType
	objectAttrs["reregistration_required"] = types.BoolType
	objectAttrs["two_factor_authentication_enabled"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["active_login"] = types.BoolType
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["groups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupAccountGroupLinkableWrapper(recurse)}
	objectAttrs["pending_recovery_requests"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountRecoveryStatus(recurse)}
	objectAttrs["settings"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountSettings(recurse)}
	objectAttrs["stored_attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthStoredAccountAttributes(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountsAuditStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountsAuditStats_directoryStats(recurse)}
	objectAttrs["two_f_a_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountsAuditStats_twoFAStats(recurse)}
	objectAttrs["validity_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountsAuditStats_validityStats(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountsAuditStats_directoryStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountsAuditStats_twoFAStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountsAuditStats_validityStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSAuthInternalAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(false)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["can_request_groups"] = types.BoolType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["directory_name"] = types.StringType
	objectAttrs["directory_password_change_required"] = types.BoolType
	objectAttrs["directory_rotating_password"] = types.StringType
	objectAttrs["directory_type"] = types.StringType
	objectAttrs["email"] = types.StringType
	objectAttrs["id_in_directory"] = types.StringType
	objectAttrs["key_hub_password_change_required"] = types.BoolType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["license_role"] = types.StringType
	objectAttrs["locale"] = types.StringType
	objectAttrs["reregistration_required"] = types.BoolType
	objectAttrs["token_password_enabled"] = types.BoolType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["valid_in_directory"] = types.BoolType
	objectAttrs["activation_code"] = types.StringType
	objectAttrs["activation_deadline"] = types.StringType
	objectAttrs["company"] = types.StringType
	objectAttrs["first_name"] = types.StringType
	objectAttrs["last_name"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["telephone"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthInternalAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthInternalAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSAuthInternalAccountStatusObject(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthMoveInternalAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["internal_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryInternalDirectory(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSAuthPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["full"] = types.StringType
	objectAttrs["instances"] = types.ListType{ElemType: types.StringType}
	objectAttrs["operations"] = types.ListType{ElemType: types.StringType}
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthStoredAccountAttribute(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthStoredAccountAttributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthStoredAccountAttribute(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSCertificateCertificate(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificate_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["alias"] = types.StringType
	objectAttrs["certificate_certificate_primer_type"] = types.StringType
	objectAttrs["certificate_data"] = types.ListType{ElemType: types.StringType}
	objectAttrs["expiration"] = types.StringType
	objectAttrs["fingerprint_sha1"] = types.StringType
	objectAttrs["fingerprint_sha256"] = types.StringType
	objectAttrs["global"] = types.BoolType
	objectAttrs["subject_d_n"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["key_data"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSCertificateCertificateLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificate(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSCertificateCertificatePrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["alias"] = types.StringType
	objectAttrs["certificate_certificate_primer_type"] = types.StringType
	objectAttrs["certificate_data"] = types.ListType{ElemType: types.StringType}
	objectAttrs["expiration"] = types.StringType
	objectAttrs["fingerprint_sha1"] = types.StringType
	objectAttrs["fingerprint_sha256"] = types.StringType
	objectAttrs["global"] = types.BoolType
	objectAttrs["subject_d_n"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSCertificateCertificate_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplication(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplication_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["client_client_application_primer_type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplicationLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplication(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplicationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["client_client_application_primer_type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplication_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["groupclients"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClientLinkableWrapper(recurse)}
	objectAttrs["groups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupLinkableWrapper(recurse)}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadSsoApplicationLaunchpadTile(recurse)}
	objectAttrs["vault_record_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSClientLdapClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplication_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["client_client_application_primer_type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["bind_dn"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	objectAttrs["used_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplication_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["client_client_application_primer_type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(false)}}
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2Client_attributes(false)}
	objectAttrs["callback_u_r_i"] = types.StringType
	objectAttrs["confidential"] = types.BoolType
	objectAttrs["debug_mode"] = types.BoolType
	objectAttrs["id_token_claims"] = types.StringType
	objectAttrs["initiate_login_u_r_i"] = types.StringType
	objectAttrs["resource_u_r_is"] = types.StringType
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	objectAttrs["show_landing_page"] = types.BoolType
	objectAttrs["use_client_credentials"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2ClientPermission_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["for_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["for_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermissionLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2ClientPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermissionWithClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2ClientPermission_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["for_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["for_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["value"] = types.StringType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2Client(false)}
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2ClientPermissionWithClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermission_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2Client_attributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSClientSaml2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplication_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["client_client_application_primer_type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientSaml2Client_attributes(false)}
	objectAttrs["metadata"] = types.StringType
	objectAttrs["metadata_url"] = types.StringType
	objectAttrs["subject_format"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSClientSaml2Client_attributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectory_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["base_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectoryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectory(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectoryPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectoryStatusReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = types.Int64Type
	objectAttrs["reason"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectorySummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["directory_account_directory_summary_type"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryStatusReport(recurse)}
	objectAttrs["username_customizable"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectorySummaryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectorySummary(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectory_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(recurse)}
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryStatusReport(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryInternalDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectory_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["base_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectory_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["base_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["base_d_n"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["dialect"] = types.StringType
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["host"] = types.StringType
	objectAttrs["password_recovery"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["search_bind_d_n"] = types.StringType
	objectAttrs["search_bind_password"] = types.StringType
	objectAttrs["search_filter"] = types.StringType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryMaintenanceDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectory_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["base_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectory_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["directory_account_directory_primer_type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["base_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	objectAttrs["acr_values"] = types.StringType
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["enforces2fa"] = types.BoolType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["issuer"] = types.StringType
	objectAttrs["logout_url"] = types.StringType
	objectAttrs["send_login_hint"] = types.BoolType
	objectAttrs["vendor_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupAccountGroup_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["end_date"] = types.StringType
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupFolder(false)}
	objectAttrs["last_used"] = types.StringType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupAccountGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupAccountGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupAccountGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupAuthorizedGroupsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}}
	objectAttrs["group_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["application_administration"] = types.BoolType
	objectAttrs["audit_config"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAuditConfig(false)}
	objectAttrs["audit_requested"] = types.BoolType
	objectAttrs["auditor"] = types.BoolType
	objectAttrs["authorizing_group_auditing"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_delegation"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_membership"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_provisioning"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["classification"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassificationPrimer(false)}
	objectAttrs["description"] = types.StringType
	objectAttrs["extended_access"] = types.StringType
	objectAttrs["hide_audit_trail"] = types.BoolType
	objectAttrs["nested_under"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["private_group"] = types.BoolType
	objectAttrs["record_trail"] = types.BoolType
	objectAttrs["rotating_password_required"] = types.BoolType
	objectAttrs["single_managed"] = types.BoolType
	objectAttrs["vault_recovery"] = types.StringType
	objectAttrs["vault_requires_activation"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccountNesting(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["connected"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccountStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupFolder(recurse)}
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAdminMail(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["body"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAudit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAudit_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["accounts"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAuditAccount(false)}}
	objectAttrs["comment"] = types.StringType
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["group_name"] = types.StringType
	objectAttrs["name_on_audit"] = types.StringType
	objectAttrs["reviewed_at"] = types.StringType
	objectAttrs["reviewed_by"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["submitted_at"] = types.StringType
	objectAttrs["submitted_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAuditAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["account_valid"] = types.BoolType
	objectAttrs["action"] = types.StringType
	objectAttrs["comment"] = types.StringType
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["display_name"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["rights"] = types.StringType
	objectAttrs["username"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAuditConfig(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["months"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAuditLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAudit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAudit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAuditingInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit_due_date"] = types.StringType
	objectAttrs["last_audit_date"] = types.StringType
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_managers"] = types.Int64Type
	objectAttrs["nr_expired_vault_records"] = types.Int64Type
	objectAttrs["nr_managers"] = types.Int64Type
	objectAttrs["nr_vault_records_with_end_date"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassification_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["authorizing_group_auditing_required"] = types.BoolType
	objectAttrs["authorizing_group_delegation_required"] = types.BoolType
	objectAttrs["authorizing_group_membership_required"] = types.BoolType
	objectAttrs["authorizing_group_provisioning_required"] = types.BoolType
	objectAttrs["default_classification"] = types.BoolType
	objectAttrs["description"] = types.StringType
	objectAttrs["maximum_audit_interval"] = types.Int64Type
	objectAttrs["minimum_nr_managers"] = types.Int64Type
	objectAttrs["record_trail_required"] = types.BoolType
	objectAttrs["required_months"] = types.ListType{ElemType: types.StringType}
	objectAttrs["rotating_password_required"] = types.BoolType
	objectAttrs["vault_requires_activation"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassificationInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nr_groups"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassificationLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassification(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassificationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassificationUpdate(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["classificaton"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassificationPrimer(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassification_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["info"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassificationInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClient_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClient_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupFolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupFolder_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupFolderLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupFolder(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupFolder_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_accounts_with_vault"] = types.Int64Type
	objectAttrs["nr_audits"] = types.Int64Type
	objectAttrs["nr_clients"] = types.Int64Type
	objectAttrs["nr_provisioned_systems"] = types.Int64Type
	objectAttrs["nr_vault_records"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupSegmentedLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}}
	objectAttrs["segments"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSSegmentCount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccountLinkableWrapper(recurse)}
	objectAttrs["administered_clients"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationLinkableWrapper(recurse)}
	objectAttrs["administered_systems"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse)}
	objectAttrs["admins"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccountLinkableWrapper(recurse)}
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["authorized_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupAuthorizedGroupsWrapper(recurse)}
	objectAttrs["client_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)}
	objectAttrs["clients"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClientLinkableWrapper(recurse)}
	objectAttrs["content_administered_systems"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse)}
	objectAttrs["groupauditinginfo"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAuditingInfo(recurse)}
	objectAttrs["groupinfo"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupInfo(recurse)}
	objectAttrs["helpdesk"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectorySummaryLinkableWrapper(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(recurse)}
	objectAttrs["myaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(recurse)}
	objectAttrs["mydelegatedaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(recurse)}
	objectAttrs["nested_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimerLinkableWrapper(recurse)}
	objectAttrs["owned_clients"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationLinkableWrapper(recurse)}
	objectAttrs["owned_directories"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryLinkableWrapper(recurse)}
	objectAttrs["owned_groups_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningOwnedGroupOnSystemsWrapper(recurse)}
	objectAttrs["owned_organizational_units"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitLinkableWrapper(recurse)}
	objectAttrs["owned_systems"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse)}
	objectAttrs["recent_audits"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAuditLinkableWrapper(recurse)}
	objectAttrs["requeststatus"] = types.StringType
	objectAttrs["service_accounts"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountLinkableWrapper(recurse)}
	objectAttrs["systems"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(recurse)}
	objectAttrs["webhooks"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupsAuditStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audited_groups"] = types.Int64Type
	objectAttrs["classifications"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassification(recurse)}}
	objectAttrs["overdue_audit_groups"] = types.Int64Type
	objectAttrs["overdue_vault_policies"] = types.Int64Type
	objectAttrs["unaudited_groups"] = types.Int64Type
	objectAttrs["valid_vault_policies"] = types.Int64Type
	objectAttrs["vaults_without_policies"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupProvisioningGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupProvisioningGroup_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(false)}
	return objectAttrs
}

func objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupProvisioningGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupProvisioningGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadDisplayedLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(recurse)}
	objectAttrs["identicon_code"] = types.Int64Type
	objectAttrs["logo"] = types.ListType{ElemType: types.StringType}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadLaunchpadTilePrimer(recurse)}
	objectAttrs["title"] = types.StringType
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadDisplayedLaunchpadTiles(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadDisplayedLaunchpadTile(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadLaunchpadTile_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["identicon_code"] = types.Int64Type
	objectAttrs["launchpad_launchpad_tile_type"] = types.StringType
	objectAttrs["logo"] = types.ListType{ElemType: types.StringType}
	objectAttrs["vault_record"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadLaunchpadTileLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadLaunchpadTile(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadLaunchpadTilePrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadLaunchpadTile_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadManualLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadLaunchpadTile_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["identicon_code"] = types.Int64Type
	objectAttrs["launchpad_launchpad_tile_type"] = types.StringType
	objectAttrs["logo"] = types.ListType{ElemType: types.StringType}
	objectAttrs["vault_record"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	objectAttrs["title"] = types.StringType
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadSsoApplicationLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadLaunchpadTile_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["identicon_code"] = types.Int64Type
	objectAttrs["launchpad_launchpad_tile_type"] = types.StringType
	objectAttrs["logo"] = types.ListType{ElemType: types.StringType}
	objectAttrs["vault_record"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadVaultRecordLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadLaunchpadTile_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["identicon_code"] = types.Int64Type
	objectAttrs["launchpad_launchpad_tile_type"] = types.StringType
	objectAttrs["logo"] = types.ListType{ElemType: types.StringType}
	objectAttrs["vault_record"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSLicenseKeyHubLicenseInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["current_license_status"] = types.StringType
	objectAttrs["customer_company"] = types.StringType
	objectAttrs["customer_contact"] = types.StringType
	objectAttrs["customer_domains"] = types.ListType{ElemType: types.StringType}
	objectAttrs["details"] = types.ListType{ElemType: types.StringType}
	objectAttrs["expiration_time"] = types.StringType
	objectAttrs["features"] = types.ListType{ElemType: types.StringType}
	objectAttrs["issue_time"] = types.StringType
	objectAttrs["key_hub_domain"] = types.StringType
	objectAttrs["license_key"] = types.StringType
	objectAttrs["not_before_time"] = types.StringType
	objectAttrs["users_hard_limit"] = types.Int64Type
	objectAttrs["users_pro_limit"] = types.Int64Type
	objectAttrs["users_soft_limit"] = types.Int64Type
	objectAttrs["uuid"] = types.StringType
	objectAttrs["version"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSMarkItemMarker(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["level"] = types.StringType
	objectAttrs["mark_item_marker_type"] = types.StringType
	objectAttrs["parameters"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarker_parameters(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSMarkItemMarker_parameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSMarkItemMarkers(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["markers"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarker(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSNotificationCertificateExpiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificate(recurse)}
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryLDAPDirectory(recurse)}
	objectAttrs["expiration"] = types.StringType
	objectAttrs["ldap_client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientLdapClient(recurse)}
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem(recurse)}
	objectAttrs["usage"] = types.StringType
	objectAttrs["webhook"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhook(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSNotificationGroupAuditRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["due_date"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}
	objectAttrs["notification_group_audit_required_notification_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSNotificationGroupEditRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}
	objectAttrs["parameters"] = types.ObjectType{AttrTypes: objectAttrsTypeDSNotificationGroupEditRequiredNotification_parameters(recurse)}
	objectAttrs["reason"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSNotificationGroupEditRequiredNotification_parameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSNotificationInvalidSignaturesDetectedNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSNotificationLicenseStatusNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["active_accounts"] = types.Int64Type
	objectAttrs["license_info"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLicenseKeyHubLicenseInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSNotificationModificationRequestNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["admins"] = types.ListType{ElemType: types.StringType}
	objectAttrs["groups"] = types.ListType{ElemType: types.StringType}
	objectAttrs["request"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSNotificationNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSNotificationNotifications(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSNotificationNotification(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSNotificationOldApiVersionUsageNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["api_version"] = types.Int64Type
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2Client(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSNotificationProvisionConfigRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["systems"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSNotificationRotatingPasswordRequiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["groups"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSNotificationUpdateAvailableNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["released_at"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSNotificationVaultRecordExpiredNotification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["record"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecord(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationAccountOrganizationalUnit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationAccountOrganizationalUnit_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationAccountOrganizationalUnitLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationAccountOrganizationalUnit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationAccountOrganizationalUnit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnit_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["depth"] = types.Int64Type
	objectAttrs["description"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningAbstractProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningAbstractProvisionedLDAP_attributes(false)}
	objectAttrs["base_d_n"] = types.StringType
	objectAttrs["bind_d_n"] = types.StringType
	objectAttrs["bind_password"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["group_d_n"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["object_classes"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["service_account_d_n"] = types.StringType
	objectAttrs["ssh_public_key_supported"] = types.BoolType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["user_d_n"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningAbstractProvisionedLDAP_attributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSProvisioningAccountProvisioningStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["description"] = types.StringType
	objectAttrs["result"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupProvisioningGroup(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningAccountProvisioningStatusReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["status"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningAccountProvisioningStatus(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningCircuitBreakerStatistics(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["number_of_failed_calls"] = types.Int64Type
	objectAttrs["number_of_not_permitted_calls"] = types.Int64Type
	objectAttrs["number_of_successful_calls"] = types.Int64Type
	objectAttrs["state"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystemTypes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["provgroups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(recurse)}
	objectAttrs["service_accounts"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountPrimerLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupProvisioningStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupFolder(recurse)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}
	objectAttrs["provisioning_duration"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupProvisioningStatus_provisioningDuration(recurse)}
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["provisioning_permission_end_time"] = types.StringType
	objectAttrs["status_report"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningAccountProvisioningStatusReport(recurse)}
	objectAttrs["visible_on_dashboard"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupProvisioningStatus_provisioningDuration(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nanos"] = types.Int64Type
	objectAttrs["seconds"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningOwnedGroupOnSystemsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(recurse)}}
	objectAttrs["unlinked_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionNumberSequence(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionNumberSequence_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["name"] = types.StringType
	objectAttrs["next_u_i_d"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionNumberSequenceLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionNumberSequence(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionNumberSequence_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["systems"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAD(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningAbstractProvisionedLDAP_attributes(false)}
	objectAttrs["base_d_n"] = types.StringType
	objectAttrs["bind_d_n"] = types.StringType
	objectAttrs["bind_password"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["group_d_n"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["object_classes"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["service_account_d_n"] = types.StringType
	objectAttrs["ssh_public_key_supported"] = types.BoolType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["user_d_n"] = types.StringType
	objectAttrs["sam_account_name_scheme"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAzureOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAzureSyncLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAzureTenant(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["idp_domain"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedInternalLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientLdapClient(false)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningAbstractProvisionedLDAP_attributes(false)}
	objectAttrs["base_d_n"] = types.StringType
	objectAttrs["bind_d_n"] = types.StringType
	objectAttrs["bind_password"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["group_d_n"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["object_classes"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["service_account_d_n"] = types.StringType
	objectAttrs["ssh_public_key_supported"] = types.BoolType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["user_d_n"] = types.StringType
	objectAttrs["gid"] = types.Int64Type
	objectAttrs["hashing_scheme"] = types.StringType
	objectAttrs["numbering"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionNumberSequence(false)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["group_d_n"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["provisioning_provisioned_system_primer_type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemSyncLog(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemSyncLog_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["created_at"] = types.StringType
	objectAttrs["errors"] = types.Int64Type
	objectAttrs["log"] = types.StringType
	objectAttrs["modifications"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemSyncLogLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemSyncLog(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemSyncLog_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAccount(recurse)}
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["issued_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)}
	objectAttrs["login_name"] = types.StringType
	objectAttrs["management_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisioningManagementPermissions(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(recurse)}
	objectAttrs["statistics"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningCircuitBreakerStatistics(recurse)}
	objectAttrs["supported_group_types"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystemTypes(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisioningManagementPermissions(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["create_new_groups_allowed"] = types.BoolType
	objectAttrs["create_service_accounts_allowed"] = types.BoolType
	objectAttrs["reuse_existing_groups_allowed"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisioningStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["groups"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupProvisioningStatus(recurse)}}
	objectAttrs["ignore_errors"] = types.BoolType
	objectAttrs["restricted_by_license"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningTokenPassword(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["password"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestAbstractApplicationModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestAbstractOrganizationalUnitModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestAbstractProvisionedSystemModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestAcceptGrantAccessRequestParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["access_duration"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestAcceptGrantAccessRequestParameters_accessDuration(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSRequestAcceptGrantAccessRequestParameters_accessDuration(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nanos"] = types.Int64Type
	objectAttrs["seconds"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSRequestAcceptJoinGroupRequestParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["end_date"] = types.StringType
	objectAttrs["make_manager"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSRequestAcceptModificationRequestParameters(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSRequestAddGroupAdminRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["new_admin"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["private_key"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestCreateGroupOnSystemRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_on_system_type"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestCreateGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["group_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestCreateServiceAccountRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["username"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestDisable2FARequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["subject"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestEnableTechnicalAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestExtendAccessRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["extend_until"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestGrantAccessRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestGrantApplicationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestGrantClientPermissionRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["permission_type"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestGrantGroupOnSystemRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestGrantGroupOnSystemRequestRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestGrantServiceAccountGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(false)}
	objectAttrs["service_account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestJoinGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestJoinVaultRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestModificationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestModificationRequestLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSRequestModificationRequest_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["reset_status"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestPasswordResetRequestStatus(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSRequestPasswordResetRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestPasswordResetRequestStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["cooldown_end"] = types.StringType
	objectAttrs["managers"] = types.ListType{ElemType: types.StringType}
	objectAttrs["nr_accepted"] = types.Int64Type
	objectAttrs["reset_via_mail"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestRemoveGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["group_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestRemoveOrganizationalUnitRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["organizational_unit_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestRemoveProvisionedSystemRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["system_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestReviewAuditRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestRevokeAdminRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["admin"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestSetupAuthorizingGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["authorizing_group_type"] = types.StringType
	objectAttrs["connect"] = types.BoolType
	objectAttrs["requesting_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestSetupNestedGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["account_action"] = types.StringType
	objectAttrs["connect"] = types.BoolType
	objectAttrs["requesting_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferApplicationAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferApplicationOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["application"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferAuditorGroupRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferGroupOnSystemOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferOrganizationalUnitOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferProvisionedSystemAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferProvisionedSystemContentAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferProvisionedSystemOwnershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestTransferServiceAccountAdministrationRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["service_account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSRequestUpdateGroupMembershipRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["account_to_update"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["current_end_date"] = types.StringType
	objectAttrs["current_rights"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["update_group_membership_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSRequestVerifyInternalAccountRequest(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSRequestModificationRequest_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["comment"] = types.StringType
	objectAttrs["feedback"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["mail_key"] = types.StringType
	objectAttrs["request_modification_request_type"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["internal_account_name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccount_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["description"] = types.StringType
	objectAttrs["password"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	objectAttrs["password_rotation"] = types.StringType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountGroup_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["provisioning_group_on_system_primer_type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_enabled"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["groups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountGroupLinkableWrapper(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountsAuditStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["disabled_count"] = types.Int64Type
	objectAttrs["password_scheme_enabled_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountsAuditStats_passwordSchemeEnabledStats(recurse)}
	objectAttrs["system_stats"] = types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountsAuditStats_systemStats(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountsAuditStats_passwordSchemeEnabledStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountsAuditStats_systemStats(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSSimpleStringValue(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSSimpleVersionInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["contract_versions"] = types.ListType{ElemType: types.Int64Type}
	objectAttrs["key_hub_version"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultDeletedVaultHolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultDeletedVaultHolder_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["name"] = types.StringType
	objectAttrs["record_count"] = types.Int64Type
	objectAttrs["vault_deleted_vault_holder_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultDeletedVaultHolderLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultDeletedVaultHolder(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSVaultDeletedVaultHolder_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSVaultDeletedVaultRecovery(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["prefix"] = types.StringType
	objectAttrs["private_key"] = types.StringType
	objectAttrs["target_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSVaultMoveVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(recurse)}
	objectAttrs["action"] = types.StringType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(recurse)}
	objectAttrs["share_duration"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultMoveVaultRecord_shareDuration(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSVaultMoveVaultRecord_shareDuration(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nanos"] = types.Int64Type
	objectAttrs["seconds"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSVaultVault(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["access_available"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["records"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecord(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultHolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecord_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecord(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordSecrets(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["comment"] = types.StringType
	objectAttrs["file"] = types.StringType
	objectAttrs["password"] = types.StringType
	objectAttrs["totp"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordShare(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["vault_vault_record_share_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordShareSummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["children"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordShare(recurse)}}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordShare(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecord_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(recurse)}
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordSecrets(recurse)}
	objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordShareSummary(recurse)}
	objectAttrs["shares"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimerLinkableWrapper(recurse)}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadVaultRecordLaunchpadTile(recurse)}
	objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultHolder(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecovery(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(recurse)}
	objectAttrs["private_key"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultUnlock(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["password"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultUnlockResponse(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["expires_at"] = types.StringType
	objectAttrs["session_password"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhook(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhook_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["active"] = types.BoolType
	objectAttrs["all_types"] = types.BoolType
	objectAttrs["authentication_scheme"] = types.StringType
	objectAttrs["basic_auth_password"] = types.StringType
	objectAttrs["basic_auth_username"] = types.StringType
	objectAttrs["bearer_token"] = types.StringType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["custom_header_name"] = types.StringType
	objectAttrs["custom_header_value"] = types.StringType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["name"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["verbose_payloads"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhookDelivery(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional_objects"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookDelivery_additionalObjects(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	objectAttrs["payload"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookPush(false)}
	objectAttrs["reponse_headers"] = types.StringType
	objectAttrs["request_headers"] = types.StringType
	objectAttrs["response"] = types.StringType
	objectAttrs["status"] = types.Int64Type
	objectAttrs["time"] = types.Int64Type
	objectAttrs["trigger_time"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhookDeliveryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookDelivery(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhookDelivery_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhookLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhook(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhookNameUuid(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["object"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLinkable(recurse)}
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhookPush(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["by_party"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["group2"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["group_classification"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["modification_request"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["parameter1"] = types.StringType
	objectAttrs["parameter2"] = types.StringType
	objectAttrs["parameter3"] = types.StringType
	objectAttrs["security_level"] = types.StringType
	objectAttrs["seq"] = types.Int64Type
	objectAttrs["service_account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["timestamp"] = types.StringType
	objectAttrs["vault_record"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["webhook"] = types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhookNameUuid(recurse)}
	objectAttrs["webhook_webhook_push_type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhook_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}
