// Code generated by "terraform-provider-keyhub-generator"; DO NOT EDIT.
// Copyright (c) Topicus Security B.V.
// SPDX-License-Identifier: APSL-2.0

//lint:ignore U1000 Ignore unused functions in generated code
package provider

import (
	"github.com/hashicorp/terraform-plugin-framework/attr"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func objectAttrsTypeDSAuditInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["last_modified_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGeneratedSecret(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["generated_secret"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSNonLinkable(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSRestLink(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["href"] = types.StringType
	objectAttrs["id"] = types.Int64Type
	objectAttrs["rel"] = types.StringType
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuditGroupAudit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["accounts"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuditGroupAuditAccount(false)}}
	objectAttrs["comment"] = types.StringType
	objectAttrs["created_at"] = types.StringType
	objectAttrs["created_by"] = types.StringType
	objectAttrs["group_name"] = types.StringType
	objectAttrs["name_on_audit"] = types.StringType
	objectAttrs["nested_groups"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuditNestedGroupAudit(false)}}
	objectAttrs["reviewed_at"] = types.StringType
	objectAttrs["reviewed_by"] = types.StringType
	objectAttrs["status"] = types.StringType
	objectAttrs["submitted_at"] = types.StringType
	objectAttrs["submitted_by"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuditGroupAuditAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_uuid"] = types.StringType
	objectAttrs["account_valid"] = types.BoolType
	objectAttrs["action"] = types.StringType
	objectAttrs["comment"] = types.StringType
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["display_name"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["rights"] = types.StringType
	objectAttrs["username"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuditGroupAuditLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuditGroupAudit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSAuditGroupAudit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSAuditNestedGroupAudit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["action"] = types.StringType
	objectAttrs["comment"] = types.StringType
	objectAttrs["group_uuid"] = types.StringType
	objectAttrs["name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["active_login"] = types.BoolType
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["groups"] = objectAttrsTypeDSGroupAccountGroupLinkableWrapper(false)["items"]
		objectAttrs["pending_recovery_requests"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountRecoveryStatus(false)}
		objectAttrs["settings"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountSettings(false)}
		objectAttrs["stored_attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthStoredAccountAttributes(false)}
		objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(false)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["can_request_groups"] = types.BoolType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["directory_name"] = types.StringType
	objectAttrs["directory_password_change_required"] = types.BoolType
	objectAttrs["directory_rotating_password"] = types.StringType
	objectAttrs["directory_type"] = types.StringType
	objectAttrs["email"] = types.StringType
	objectAttrs["id_in_directory"] = types.StringType
	objectAttrs["key_hub_password_change_required"] = types.BoolType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["license_role"] = types.StringType
	objectAttrs["locale"] = types.StringType
	objectAttrs["reregistration_required"] = types.BoolType
	objectAttrs["token_password_enabled"] = types.BoolType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["valid_in_directory"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountRecoveryStatus(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["pending2fa_recovery_request"] = types.BoolType
	objectAttrs["pending_password_recovery_request"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccountSettings(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["default_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["directory_name"] = types.StringType
	objectAttrs["directory_type"] = types.StringType
	objectAttrs["in_groups"] = types.BoolType
	objectAttrs["in_multiple_organizational_units"] = types.BoolType
	objectAttrs["key_hub_admin"] = types.BoolType
	objectAttrs["multiple_organizational_units_exist"] = types.BoolType
	objectAttrs["password_mode"] = types.StringType
	objectAttrs["ssh_public_key"] = types.StringType
	objectAttrs["two_factor_authentication"] = types.StringType
	objectAttrs["use_token_password"] = types.BoolType
	objectAttrs["vault_status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["active_login"] = types.BoolType
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["groups"] = objectAttrsTypeDSGroupAccountGroupLinkableWrapper(recurse)["items"]
	objectAttrs["pending_recovery_requests"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountRecoveryStatus(recurse)}
	objectAttrs["settings"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountSettings(recurse)}
	objectAttrs["stored_attributes"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthStoredAccountAttributes(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSAuthPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["full"] = types.StringType
	objectAttrs["instances"] = types.ListType{ElemType: types.StringType}
	objectAttrs["operations"] = types.SetType{ElemType: types.StringType}
	objectAttrs["type_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthStoredAccountAttribute(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSAuthStoredAccountAttributes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthStoredAccountAttribute(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSCertificateCertificate(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["alias"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["certificate_data"] = types.StringType
	objectAttrs["expiration"] = types.StringType
	objectAttrs["fingerprint_sha1"] = types.StringType
	objectAttrs["fingerprint_sha256"] = types.StringType
	objectAttrs["global"] = types.BoolType
	objectAttrs["subject_dn"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["key_data"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSCertificateCertificatePrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["alias"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["certificate_data"] = types.StringType
	objectAttrs["expiration"] = types.StringType
	objectAttrs["fingerprint_sha1"] = types.StringType
	objectAttrs["fingerprint_sha256"] = types.StringType
	objectAttrs["global"] = types.BoolType
	objectAttrs["subject_dn"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSCertificateCertificate_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplication(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["groupclients"] = objectAttrsTypeDSGroupGroupClientLinkableWrapper(false)["items"]
		objectAttrs["groups"] = objectAttrsTypeDSGroupGroupLinkableWrapper(false)["items"]
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGeneratedSecret(false)}
		objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadSsoApplicationLaunchpadTile(false)}
		objectAttrs["vault_record_count"] = types.Int64Type
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["last_modified_at"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["ldap_client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientLdapClient(false)}
	objectAttrs["oauth2_client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2Client(false)}
	objectAttrs["saml2_client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientSaml2Client(false)}
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplicationLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplication(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplicationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["type"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["scopes"] = types.ListType{ElemType: types.StringType}
	objectAttrs["sso_application"] = types.BoolType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSClientClientApplication_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["groupclients"] = objectAttrsTypeDSGroupGroupClientLinkableWrapper(recurse)["items"]
	objectAttrs["groups"] = objectAttrsTypeDSGroupGroupLinkableWrapper(recurse)["items"]
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGeneratedSecret(recurse)}
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadSsoApplicationLaunchpadTile(recurse)}
	objectAttrs["vault_record_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSClientLdapClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["bind_dn"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(recurse)}
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(recurse)}
	objectAttrs["used_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account_permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["attributes"] = types.MapType{ElemType: types.StringType}
	objectAttrs["callback_uri"] = types.StringType
	objectAttrs["debug_mode"] = types.BoolType
	objectAttrs["id_token_claims"] = types.StringType
	objectAttrs["initiate_login_uri"] = types.StringType
	objectAttrs["profile"] = types.StringType
	objectAttrs["resource_uris"] = types.StringType
	objectAttrs["share_secret_in_vault"] = types.BoolType
	objectAttrs["shared_secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(recurse)}
	objectAttrs["show_landing_page"] = types.BoolType
	objectAttrs["use_client_credentials"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermission(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["for_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["for_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["value"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermissionWithClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["for_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["for_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["value"] = types.StringType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2Client(false)}
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSClientOAuth2ClientPermissionWithClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSClientOAuth2ClientPermission_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSClientSaml2Client(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.MapType{ElemType: types.StringType}
	objectAttrs["metadata"] = types.StringType
	objectAttrs["metadata_url"] = types.StringType
	objectAttrs["subject_format"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(false)}
		objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryStatusReport(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["base_organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	objectAttrs["default_directory"] = types.BoolType
	objectAttrs["helpdesk_group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["restrict2fa"] = types.BoolType
	objectAttrs["rotating_password"] = types.StringType
	objectAttrs["username_customizable"] = types.BoolType
	objectAttrs["internal_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryInternalDirectory(false)}
	objectAttrs["ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryLDAPDirectory(false)}
	objectAttrs["maintenance_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryMaintenanceDirectory(false)}
	objectAttrs["oidc_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryOIDCDirectory(false)}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectoryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectory(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectoryPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_validity_supported"] = types.BoolType
	objectAttrs["active"] = types.BoolType
	objectAttrs["type"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectoryStatusReport(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = types.Int64Type
	objectAttrs["reason"] = types.StringType
	objectAttrs["status"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectorySummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["type"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryStatusReport(recurse)}
	objectAttrs["username_customizable"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectorySummaryLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectorySummary(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryAccountDirectory_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(recurse)}
	objectAttrs["status"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryStatusReport(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryInternalDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["base_dn"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(recurse)}
	objectAttrs["dialect"] = types.StringType
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(recurse)}
	objectAttrs["host"] = types.StringType
	objectAttrs["password_recovery"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["search_bind_dn"] = types.StringType
	objectAttrs["search_bind_password"] = types.StringType
	objectAttrs["search_filter"] = types.StringType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSDirectoryMaintenanceDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSDirectoryOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["acr_values"] = types.StringType
	objectAttrs["attributes_to_store"] = types.StringType
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["domain_restriction"] = types.StringType
	objectAttrs["enforces2fa"] = types.BoolType
	objectAttrs["fully_resolved_issuer"] = types.StringType
	objectAttrs["issuer"] = types.StringType
	objectAttrs["logout_url"] = types.StringType
	objectAttrs["send_login_hint"] = types.BoolType
	objectAttrs["vendor_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["folder"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupFolder(false)}
	objectAttrs["last_used"] = types.StringType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupAccountGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupAccountGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupAccountGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupAuthorizedGroupsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}}
	objectAttrs["group_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["accounts"] = objectAttrsTypeDSGroupGroupAccountLinkableWrapper(false)["items"]
		objectAttrs["administered_clients"] = objectAttrsTypeDSClientClientApplicationLinkableWrapper(false)["items"]
		objectAttrs["administered_systems"] = objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(false)["items"]
		objectAttrs["admins"] = objectAttrsTypeDSGroupGroupAccountLinkableWrapper(false)["items"]
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["authorized_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupAuthorizedGroupsWrapper(false)}
		objectAttrs["client_permissions"] = objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(false)["items"]
		objectAttrs["clients"] = objectAttrsTypeDSGroupGroupClientLinkableWrapper(false)["items"]
		objectAttrs["content_administered_systems"] = objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(false)["items"]
		objectAttrs["groupauditinginfo"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAuditingInfo(false)}
		objectAttrs["groupinfo"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupInfo(false)}
		objectAttrs["helpdesk"] = objectAttrsTypeDSDirectoryAccountDirectorySummaryLinkableWrapper(false)["items"]
		objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(false)}
		objectAttrs["myaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(false)}
		objectAttrs["mydelegatedaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(false)}
		objectAttrs["nested_groups"] = objectAttrsTypeDSGroupGroupPrimerLinkableWrapper(false)["items"]
		objectAttrs["owned_clients"] = objectAttrsTypeDSClientClientApplicationLinkableWrapper(false)["items"]
		objectAttrs["owned_directories"] = objectAttrsTypeDSDirectoryAccountDirectoryLinkableWrapper(false)["items"]
		objectAttrs["owned_groups_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningOwnedGroupOnSystemsWrapper(false)}
		objectAttrs["owned_organizational_units"] = objectAttrsTypeDSOrganizationOrganizationalUnitLinkableWrapper(false)["items"]
		objectAttrs["owned_systems"] = objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(false)["items"]
		objectAttrs["recent_audits"] = objectAttrsTypeDSAuditGroupAuditLinkableWrapper(false)["items"]
		objectAttrs["requeststatus"] = types.StringType
		objectAttrs["service_accounts"] = objectAttrsTypeDSServiceaccountServiceAccountLinkableWrapper(false)["items"]
		objectAttrs["systems"] = objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(false)["items"]
		objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(false)}
		objectAttrs["webhooks"] = objectAttrsTypeDSWebhookWebhookLinkableWrapper(false)["items"]
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["uuid"] = types.StringType
	objectAttrs["application_administration"] = types.BoolType
	objectAttrs["audit_config"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAuditConfig(false)}
	objectAttrs["audit_requested"] = types.BoolType
	objectAttrs["auditor"] = types.BoolType
	objectAttrs["authorizing_group_auditing"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_delegation"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_membership"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_provisioning"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["authorizing_group_types"] = types.SetType{ElemType: types.StringType}
	objectAttrs["classification"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassificationPrimer(false)}
	objectAttrs["description"] = types.StringType
	objectAttrs["extended_access"] = types.StringType
	objectAttrs["hide_audit_trail"] = types.BoolType
	objectAttrs["nested_under"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["private_group"] = types.BoolType
	objectAttrs["record_trail"] = types.BoolType
	objectAttrs["rotating_password_required"] = types.BoolType
	objectAttrs["single_managed"] = types.BoolType
	objectAttrs["vault_recovery"] = types.StringType
	objectAttrs["vault_requires_activation"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["disconnected_nested"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["last_used"] = types.StringType
	objectAttrs["nested"] = types.BoolType
	objectAttrs["provisioning_end_time"] = types.StringType
	objectAttrs["rights"] = types.StringType
	objectAttrs["two_factor_status"] = types.StringType
	objectAttrs["visible_for_provisioning"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAuditConfig(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["months"] = types.SetType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupAuditingInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit_due_date"] = types.StringType
	objectAttrs["last_audit_date"] = types.StringType
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_accounts"] = types.Int64Type
	objectAttrs["nr_disabled_managers"] = types.Int64Type
	objectAttrs["nr_expired_vault_records"] = types.Int64Type
	objectAttrs["nr_managers"] = types.Int64Type
	objectAttrs["nr_vault_records_with_end_date"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassification(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["info"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassificationInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["authorizing_group_auditing_required"] = types.BoolType
	objectAttrs["authorizing_group_delegation_required"] = types.BoolType
	objectAttrs["authorizing_group_membership_required"] = types.BoolType
	objectAttrs["authorizing_group_provisioning_required"] = types.BoolType
	objectAttrs["default_classification"] = types.BoolType
	objectAttrs["description"] = types.StringType
	objectAttrs["maximum_audit_interval"] = types.Int64Type
	objectAttrs["minimum_nr_managers"] = types.Int64Type
	objectAttrs["record_trail_required"] = types.BoolType
	objectAttrs["required_months"] = types.SetType{ElemType: types.StringType}
	objectAttrs["rotating_password_required"] = types.BoolType
	objectAttrs["vault_requires_activation"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassificationInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nr_groups"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassificationPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClassification_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["info"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClassificationInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClient(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClientLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupClient(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupClient_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupFolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupFolder_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupInfo(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["nr_accounts"] = types.Int64Type
	objectAttrs["nr_accounts_with_vault"] = types.Int64Type
	objectAttrs["nr_audits"] = types.Int64Type
	objectAttrs["nr_clients"] = types.Int64Type
	objectAttrs["nr_provisioned_systems"] = types.Int64Type
	objectAttrs["nr_vault_records"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["admin"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSGroupGroupPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["accounts"] = objectAttrsTypeDSGroupGroupAccountLinkableWrapper(recurse)["items"]
	objectAttrs["administered_clients"] = objectAttrsTypeDSClientClientApplicationLinkableWrapper(recurse)["items"]
	objectAttrs["administered_systems"] = objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse)["items"]
	objectAttrs["admins"] = objectAttrsTypeDSGroupGroupAccountLinkableWrapper(recurse)["items"]
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["authorized_groups"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupAuthorizedGroupsWrapper(recurse)}
	objectAttrs["client_permissions"] = objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)["items"]
	objectAttrs["clients"] = objectAttrsTypeDSGroupGroupClientLinkableWrapper(recurse)["items"]
	objectAttrs["content_administered_systems"] = objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse)["items"]
	objectAttrs["groupauditinginfo"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAuditingInfo(recurse)}
	objectAttrs["groupinfo"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupInfo(recurse)}
	objectAttrs["helpdesk"] = objectAttrsTypeDSDirectoryAccountDirectorySummaryLinkableWrapper(recurse)["items"]
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(recurse)}
	objectAttrs["myaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(recurse)}
	objectAttrs["mydelegatedaccount"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupAccount(recurse)}
	objectAttrs["nested_groups"] = objectAttrsTypeDSGroupGroupPrimerLinkableWrapper(recurse)["items"]
	objectAttrs["owned_clients"] = objectAttrsTypeDSClientClientApplicationLinkableWrapper(recurse)["items"]
	objectAttrs["owned_directories"] = objectAttrsTypeDSDirectoryAccountDirectoryLinkableWrapper(recurse)["items"]
	objectAttrs["owned_groups_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningOwnedGroupOnSystemsWrapper(recurse)}
	objectAttrs["owned_organizational_units"] = objectAttrsTypeDSOrganizationOrganizationalUnitLinkableWrapper(recurse)["items"]
	objectAttrs["owned_systems"] = objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse)["items"]
	objectAttrs["recent_audits"] = objectAttrsTypeDSAuditGroupAuditLinkableWrapper(recurse)["items"]
	objectAttrs["requeststatus"] = types.StringType
	objectAttrs["service_accounts"] = objectAttrsTypeDSServiceaccountServiceAccountLinkableWrapper(recurse)["items"]
	objectAttrs["systems"] = objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(recurse)["items"]
	objectAttrs["vault"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVault(recurse)}
	objectAttrs["webhooks"] = objectAttrsTypeDSWebhookWebhookLinkableWrapper(recurse)["items"]
	return objectAttrs
}

func objectAttrsTypeDSGroupProvisioningGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["activation_required"] = types.BoolType
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["group_on_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(false)}
	return objectAttrs
}

func objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSGroupProvisioningGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSGroupProvisioningGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadSsoApplicationLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["uri"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSLaunchpadVaultRecordLaunchpadTile(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSMarkItemMarker(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["level"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["parameters"] = types.MapType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSMarkItemMarkers(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["markers"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarker(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnit(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["depth"] = types.Int64Type
	objectAttrs["description"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnit(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["name"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSOrganizationOrganizationalUnit_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningAbstractProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["attributes"] = types.MapType{ElemType: types.StringType}
	objectAttrs["base_dn"] = types.StringType
	objectAttrs["bind_dn"] = types.StringType
	objectAttrs["bind_password"] = types.StringType
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(recurse)}
	objectAttrs["failover_host"] = types.StringType
	objectAttrs["failover_trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(recurse)}
	objectAttrs["group_dn"] = types.StringType
	objectAttrs["host"] = types.StringType
	objectAttrs["object_classes"] = types.StringType
	objectAttrs["port"] = types.Int64Type
	objectAttrs["service_account_dn"] = types.StringType
	objectAttrs["ssh_public_key_supported"] = types.BoolType
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(recurse)}
	objectAttrs["user_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningCircuitBreakerStatistics(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["number_of_failed_calls"] = types.Int64Type
	objectAttrs["number_of_not_permitted_calls"] = types.Int64Type
	objectAttrs["number_of_successful_calls"] = types.Int64Type
	objectAttrs["state"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["provgroups"] = objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(false)["items"]
		objectAttrs["service_accounts"] = objectAttrsTypeDSServiceaccountServiceAccountPrimerLinkableWrapper(false)["items"]
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystemTypes(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningGroupOnSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["provgroups"] = objectAttrsTypeDSGroupProvisioningGroupLinkableWrapper(recurse)["items"]
	objectAttrs["service_accounts"] = objectAttrsTypeDSServiceaccountServiceAccountPrimerLinkableWrapper(recurse)["items"]
	return objectAttrs
}

func objectAttrsTypeDSProvisioningOwnedGroupOnSystemsWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystem(recurse)}}
	objectAttrs["unlinked_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionNumberSequence(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["systems"] = objectAttrsTypeDSProvisioningProvisionedSystemPrimerLinkableWrapper(false)["items"]
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["name"] = types.StringType
	objectAttrs["next_uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionNumberSequence_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["systems"] = objectAttrsTypeDSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse)["items"]
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAD(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["sam_account_name_scheme"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["last_active"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["validity"] = types.StringType
	objectAttrs["uid"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAzureOIDCDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(recurse)}
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAzureSyncLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(recurse)}
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedAzureTenant(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client_id"] = types.StringType
	objectAttrs["client_secret"] = types.StringType
	objectAttrs["idp_domain"] = types.StringType
	objectAttrs["tenant"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedInternalLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientLdapClient(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedLDAP(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["gid"] = types.Int64Type
	objectAttrs["hashing_scheme"] = types.StringType
	objectAttrs["numbering"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionNumberSequence(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedLDAPDirectory(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(recurse)}
	objectAttrs["group_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedNamespace(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["base_system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}
	objectAttrs["group_dn"] = types.StringType
	objectAttrs["service_account_dn"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSCIM(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["authentication_scheme"] = types.StringType
	objectAttrs["basic_auth_password"] = types.StringType
	objectAttrs["basic_auth_username"] = types.StringType
	objectAttrs["bearer_token"] = types.StringType
	objectAttrs["custom_header_name"] = types.StringType
	objectAttrs["custom_header_value"] = types.StringType
	objectAttrs["url"] = types.StringType
	objectAttrs["vendor_escaped"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystem(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAccount(false)}
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["issued_permissions"] = objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(false)["items"]
		objectAttrs["login_name"] = types.StringType
		objectAttrs["management_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisioningManagementPermissions(false)}
		objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(false)}
		objectAttrs["statistics"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningCircuitBreakerStatistics(false)}
		objectAttrs["supported_group_types"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystemTypes(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["account_count"] = types.Int64Type
	objectAttrs["content_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["external_uuid"] = types.StringType
	objectAttrs["owner"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["self_service_existing_groups"] = types.BoolType
	objectAttrs["self_service_new_groups"] = types.BoolType
	objectAttrs["self_service_new_namespaces"] = types.BoolType
	objectAttrs["self_service_service_accounts"] = types.BoolType
	objectAttrs["should_destroy_unknown_accounts"] = types.BoolType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["username_prefix"] = types.StringType
	objectAttrs["abstract_provisioned_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningAbstractProvisionedLDAP(false)}
	objectAttrs["provisioned_a_d"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAD(false)}
	objectAttrs["provisioned_azure_oidc_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAzureOIDCDirectory(false)}
	objectAttrs["provisioned_azure_sync_ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAzureSyncLDAPDirectory(false)}
	objectAttrs["provisioned_azure_tenant"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAzureTenant(false)}
	objectAttrs["provisioned_internal_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedInternalLDAP(false)}
	objectAttrs["provisioned_ldap"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedLDAP(false)}
	objectAttrs["provisioned_ldap_directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedLDAPDirectory(false)}
	objectAttrs["provisioned_namespace"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedNamespace(false)}
	objectAttrs["provisioned_scim"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSCIM(false)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystem(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["organizational_unit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSOrganizationOrganizationalUnitPrimer(recurse)}
	objectAttrs["type"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystemPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisionedSystem_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedAccount(recurse)}
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["issued_permissions"] = objectAttrsTypeDSClientOAuth2ClientPermissionWithClientLinkableWrapper(recurse)["items"]
	objectAttrs["login_name"] = types.StringType
	objectAttrs["management_permissions"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisioningManagementPermissions(recurse)}
	objectAttrs["markers"] = types.ObjectType{AttrTypes: objectAttrsTypeDSMarkItemMarkers(recurse)}
	objectAttrs["statistics"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningCircuitBreakerStatistics(recurse)}
	objectAttrs["supported_group_types"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningGroupOnSystemTypes(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSProvisioningProvisioningManagementPermissions(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["create_new_groups_allowed"] = types.BoolType
	objectAttrs["create_service_accounts_allowed"] = types.BoolType
	objectAttrs["reuse_existing_groups_allowed"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccount(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["groups"] = objectAttrsTypeDSServiceaccountServiceAccountGroupLinkableWrapper(false)["items"]
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGeneratedSecret(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["description"] = types.StringType
	objectAttrs["password"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
	objectAttrs["password_rotation"] = types.StringType
	objectAttrs["technical_administrator"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountGroup(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["display_name"] = types.StringType
	objectAttrs["name_in_system"] = types.StringType
	objectAttrs["type"] = types.StringType
	objectAttrs["short_name_in_system"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountGroupLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountGroup(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountGroup_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccount(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["active"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(recurse)}
	objectAttrs["username"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccountPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSServiceaccountServiceAccountPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSServiceaccountServiceAccount_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["groups"] = objectAttrsTypeDSServiceaccountServiceAccountGroupLinkableWrapper(recurse)["items"]
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGeneratedSecret(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSVaultPasswordMetadata(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["dictionary"] = types.BoolType
	objectAttrs["duplicate"] = types.BoolType
	objectAttrs["hash"] = types.StringType
	objectAttrs["length"] = types.Int64Type
	objectAttrs["lower_count"] = types.Int64Type
	objectAttrs["number_count"] = types.Int64Type
	objectAttrs["special_count"] = types.Int64Type
	objectAttrs["strength"] = types.Int64Type
	objectAttrs["upper_count"] = types.Int64Type
	return objectAttrs
}

func objectAttrsTypeDSVaultVault(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["access_available"] = types.BoolType
	objectAttrs["name"] = types.StringType
	objectAttrs["records"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecord(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultHolder(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecord(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
		objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(false)}
		objectAttrs["password_metadata"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultPasswordMetadata(false)}
		objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordSecrets(false)}
		objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordShareSummary(false)}
		objectAttrs["shares"] = objectAttrsTypeDSVaultVaultRecordPrimerLinkableWrapper(false)["items"]
		objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadVaultRecordLaunchpadTile(false)}
		objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultHolder(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["derived"] = types.BoolType
	objectAttrs["end_date"] = types.StringType
	objectAttrs["filename"] = types.StringType
	objectAttrs["types"] = types.SetType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["username"] = types.StringType
	objectAttrs["warning_period"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordPrimer(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["color"] = types.StringType
	objectAttrs["name"] = types.StringType
	objectAttrs["share_end_time"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordPrimerLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordSecrets(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["comment"] = types.StringType
	objectAttrs["file"] = types.StringType
	objectAttrs["password"] = types.StringType
	objectAttrs["totp"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordShare(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["name"] = types.StringType
	objectAttrs["type"] = types.StringType
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecordShareSummary(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["children"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordShare(recurse)}}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordShare(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSVaultVaultRecord_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	objectAttrs["parent"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordPrimer(recurse)}
	objectAttrs["password_metadata"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultPasswordMetadata(recurse)}
	objectAttrs["secret"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordSecrets(recurse)}
	objectAttrs["share_summary"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultRecordShareSummary(recurse)}
	objectAttrs["shares"] = objectAttrsTypeDSVaultVaultRecordPrimerLinkableWrapper(recurse)["items"]
	objectAttrs["tile"] = types.ObjectType{AttrTypes: objectAttrsTypeDSLaunchpadVaultRecordLaunchpadTile(recurse)}
	objectAttrs["vaultholder"] = types.ObjectType{AttrTypes: objectAttrsTypeDSVaultVaultHolder(recurse)}
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhook(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	if recurse {
		objectAttrs["additional"] = types.ListType{ElemType: types.StringType}
	}
	if recurse {
		objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(false)}
	}
	objectAttrs["links"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSRestLink(recurse)}}
	objectAttrs["permissions"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSAuthPermission(recurse)}}
	objectAttrs["account"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuthAccountPrimer(false)}
	objectAttrs["active"] = types.BoolType
	objectAttrs["all_types"] = types.BoolType
	objectAttrs["authentication_scheme"] = types.StringType
	objectAttrs["basic_auth_password"] = types.StringType
	objectAttrs["basic_auth_username"] = types.StringType
	objectAttrs["bearer_token"] = types.StringType
	objectAttrs["client"] = types.ObjectType{AttrTypes: objectAttrsTypeDSClientClientApplicationPrimer(false)}
	objectAttrs["client_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["custom_header_name"] = types.StringType
	objectAttrs["custom_header_value"] = types.StringType
	objectAttrs["directory"] = types.ObjectType{AttrTypes: objectAttrsTypeDSDirectoryAccountDirectoryPrimer(false)}
	objectAttrs["group"] = types.ObjectType{AttrTypes: objectAttrsTypeDSGroupGroupPrimer(false)}
	objectAttrs["name"] = types.StringType
	objectAttrs["system"] = types.ObjectType{AttrTypes: objectAttrsTypeDSProvisioningProvisionedSystemPrimer(false)}
	objectAttrs["tls"] = types.StringType
	objectAttrs["trusted_certificate"] = types.ObjectType{AttrTypes: objectAttrsTypeDSCertificateCertificatePrimer(false)}
	objectAttrs["types"] = types.ListType{ElemType: types.StringType}
	objectAttrs["url"] = types.StringType
	objectAttrs["uuid"] = types.StringType
	objectAttrs["verbose_payloads"] = types.BoolType
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhookLinkableWrapper(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["items"] = types.ListType{ElemType: types.ObjectType{AttrTypes: objectAttrsTypeDSWebhookWebhook(recurse)}}
	return objectAttrs
}

func objectAttrsTypeDSWebhookWebhook_additionalObjects(recurse bool) map[string]attr.Type {
	objectAttrs := make(map[string]attr.Type)
	objectAttrs["audit"] = types.ObjectType{AttrTypes: objectAttrsTypeDSAuditInfo(recurse)}
	return objectAttrs
}
